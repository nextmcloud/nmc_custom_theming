/**
 * @license
 * Scale https://github.com/telekom/scale
 *
 * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import { EventEmitter } from '../../stencil-public-runtime';
export declare class Slider {
  sliderTrack?: HTMLDivElement;
  /** (optional) the display value of the slider */
  value?: number;
  /** t(optional) he minimal value of the slider */
  min?: number;
  /** (optional) the maximal value of the slider */
  max?: number;
  /** (optional) the step size to increase or decrease when dragging slider */
  step?: number;
  /** (optional) slider label */
  label?: string;
  /** (optional) slider display value */
  showValue?: boolean;
  /** (optional) slider custom color */
  customColor?: string;
  /** (optional) disabled  */
  disabled?: boolean;
  /** (optional) smaller track */
  trackSmall?: boolean;
  /** (optional) larger thumb */
  thumbLarge?: boolean;
  /** (optional) Slider id */
  sliderId?: string;
  /** (optional) Injected CSS styles */
  styles?: string;
  dragging: boolean;
  startX: number;
  currentX: number;
  startPosition: number;
  newPosition: number;
  scaleChange: EventEmitter<number>;
  constructor();
  componentWillLoad(): void;
  disconnectedCallback(): void;
  onButtonDown: (event: any) => void;
  onDragStart: (event: any) => void;
  onDragging: (event: any) => void;
  onDragEnd: () => void;
  addGlobalListeners(): void;
  removeGlobalListeners(): void;
  handleTouchEvent(event: any): MouseEvent | Touch;
  onKeyDown: (event: any) => void;
  setPosition: (newPosition: number) => void;
  currentPosition(): string;
  render(): any;
  getBasePartMap(): string;
  getCssClassMap(): string;
  getCssOrBasePartMap(mode: 'basePart' | 'css'): string;
}
