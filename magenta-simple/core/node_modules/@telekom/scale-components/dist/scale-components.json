{
  "timestamp": "2021-05-17T17:05:41",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.3.0",
    "typescriptVersion": "4.0.5"
  },
  "components": [
    {
      "filePath": "./src/components/telekom/app-logo/app-logo.tsx",
      "encapsulation": "none",
      "tag": "app-logo",
      "readme": "# app-logo\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "claim",
          "type": "boolean",
          "mutable": false,
          "attr": "claim",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "claimLang",
          "type": "string",
          "mutable": false,
          "attr": "claim-lang",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'#fff'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'javascript:void(0);'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "logoTitle",
          "type": "string",
          "mutable": false,
          "attr": "logo-title",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'Telekom Logo'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-app-footer",
        "scale-app-header"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-app-footer": [
          "app-logo"
        ],
        "scale-app-header": [
          "app-logo"
        ]
      }
    },
    {
      "filePath": "./src/components/telekom/app-mega-menu/app-mega-menu.tsx",
      "encapsulation": "none",
      "tag": "app-mega-menu",
      "readme": "# app-mega-menu\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "activeRouteId",
          "type": "string",
          "mutable": false,
          "attr": "active-route-id",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hide",
          "type": "() => void",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "() => void"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "isActive",
          "type": "boolean",
          "mutable": false,
          "attr": "is-active",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "navigation",
          "type": "MenuItem[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "MenuItem[]"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-app-header"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-app-header": [
          "app-mega-menu"
        ]
      }
    },
    {
      "filePath": "./src/components/telekom/app-navigation-main-mobile/app-navigation-main-mobile.tsx",
      "encapsulation": "none",
      "tag": "app-navigation-main-mobile",
      "readme": "# app-navigation-main-mobile\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "activeRouteId",
          "type": "string",
          "mutable": false,
          "attr": "active-route-id",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hide",
          "type": "() => void",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "() => void"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "navigation",
          "type": "MenuItem[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "MenuItem[]"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "closeMenu",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-app-header"
      ],
      "dependencies": [
        "scale-icon-navigation-left",
        "scale-icon-navigation-right"
      ],
      "dependencyGraph": {
        "app-navigation-main-mobile": [
          "scale-icon-navigation-left",
          "scale-icon-navigation-right"
        ],
        "scale-app-header": [
          "app-navigation-main-mobile"
        ]
      }
    },
    {
      "filePath": "./src/components/telekom/app-navigation-sector-mobile/app-navigation-sector-mobile.tsx",
      "encapsulation": "none",
      "tag": "app-navigation-sector-mobile",
      "readme": "# app-navigation-sector-mobile\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "activeSectorId",
          "type": "string",
          "mutable": false,
          "attr": "active-sector-id",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "hide",
          "type": "() => void",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "() => void"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "navigation",
          "type": "MenuItem[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "MenuItem[]"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-app-header"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-app-header": [
          "app-navigation-sector-mobile"
        ]
      }
    },
    {
      "filePath": "./src/components/accordion/accordion.tsx",
      "encapsulation": "shadow",
      "tag": "scale-accordion",
      "readme": "# scale-accordion\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "dependent",
          "type": "boolean",
          "mutable": false,
          "attr": "dependent",
          "reflectToAttr": false,
          "docs": "If `true`, only one scale-collapsible within the accordion can be open at a time",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": false,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "If `true`, scale-collapsibles within the accordion will all be open initially, unless this is dependant",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "scaleExpand",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "base",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/alert/alert.tsx",
      "encapsulation": "shadow",
      "tag": "scale-alert",
      "readme": "# scale-alert\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "headline",
          "type": "string",
          "mutable": false,
          "attr": "headline",
          "reflectToAttr": true,
          "docs": "(optional) Alert title",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "(optional) Alert icon",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "opened",
          "type": "boolean",
          "mutable": false,
          "attr": "opened",
          "reflectToAttr": true,
          "docs": "(optional) Alert opened",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) Alert size",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "timeout",
          "type": "boolean | number",
          "mutable": false,
          "attr": "timeout",
          "reflectToAttr": false,
          "docs": "(optional) Alert timeout",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "(optional) Alert variant",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "open",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "open() => Promise<void>",
          "parameters": [],
          "docs": "Alert method: open()",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/telekom/app-footer/app-footer.tsx",
      "encapsulation": "shadow",
      "tag": "scale-app-footer",
      "readme": "# scale-app-footer\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "claimLang",
          "type": "string",
          "mutable": false,
          "attr": "claim-lang",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "copyright",
          "type": "string",
          "mutable": false,
          "attr": "copyright",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'© Deutsche Telekom AG'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "footerNavigation",
          "type": "any",
          "mutable": false,
          "attr": "footer-navigation",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'standard'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "app-logo",
        "scale-icon"
      ],
      "dependencyGraph": {
        "scale-app-footer": [
          "app-logo",
          "scale-icon"
        ]
      }
    },
    {
      "filePath": "./src/components/telekom/app-header/app-header.tsx",
      "encapsulation": "none",
      "tag": "scale-app-header",
      "readme": "# scale-header\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "activeRouteId",
          "type": "string",
          "mutable": false,
          "attr": "active-route-id",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "activeSectorId",
          "type": "string",
          "mutable": false,
          "attr": "active-sector-id",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "addonNavigation",
          "type": "any",
          "mutable": false,
          "attr": "addon-navigation",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "claimLang",
          "type": "string",
          "mutable": false,
          "attr": "claim-lang",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "iconNavigation",
          "type": "any",
          "mutable": false,
          "attr": "icon-navigation",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "isMegaMenuVisible",
          "type": "boolean",
          "mutable": false,
          "attr": "is-mega-menu-visible",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "isMobileMenuVisible",
          "type": "boolean",
          "mutable": false,
          "attr": "is-mobile-menu-visible",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "logoClick",
          "type": "any",
          "mutable": false,
          "attr": "logo-click",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "logoHref",
          "type": "string",
          "mutable": false,
          "attr": "logo-href",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "logoTitle",
          "type": "string",
          "mutable": false,
          "attr": "logo-title",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "mainNavigation",
          "type": "any",
          "mutable": false,
          "attr": "main-navigation",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "portalName",
          "type": "string",
          "mutable": false,
          "attr": "portal-name",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "sectorNavigation",
          "type": "any",
          "mutable": false,
          "attr": "sector-navigation",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "scroll",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "closeMenu",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-app-shell"
      ],
      "dependencies": [
        "scale-nav-main",
        "app-mega-menu",
        "scale-nav-icon",
        "scale-nav-segment",
        "app-logo",
        "app-navigation-sector-mobile",
        "app-navigation-main-mobile"
      ],
      "dependencyGraph": {
        "scale-app-header": [
          "scale-nav-main",
          "app-mega-menu",
          "scale-nav-icon",
          "scale-nav-segment",
          "app-logo",
          "app-navigation-sector-mobile",
          "app-navigation-main-mobile"
        ],
        "scale-nav-icon": [
          "scale-icon"
        ],
        "app-navigation-main-mobile": [
          "scale-icon-navigation-left",
          "scale-icon-navigation-right"
        ],
        "scale-app-shell": [
          "scale-app-header"
        ]
      }
    },
    {
      "filePath": "./src/components/telekom/app-shell/app-shell.tsx",
      "encapsulation": "shadow",
      "tag": "scale-app-shell",
      "readme": "# scale-shell\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "activeRouteId",
          "type": "string",
          "mutable": false,
          "attr": "active-route-id",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "activeSectorId",
          "type": "string",
          "mutable": false,
          "attr": "active-sector-id",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "addonNavigation",
          "type": "any",
          "mutable": false,
          "attr": "addon-navigation",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "claimLang",
          "type": "string",
          "mutable": false,
          "attr": "claim-lang",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'de'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "iconNavigation",
          "type": "any",
          "mutable": false,
          "attr": "icon-navigation",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "logoClick",
          "type": "any",
          "mutable": false,
          "attr": "logo-click",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "logoHref",
          "type": "string",
          "mutable": false,
          "attr": "logo-href",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "logoTitle",
          "type": "string",
          "mutable": false,
          "attr": "logo-title",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "mainNavigation",
          "type": "any",
          "mutable": false,
          "attr": "main-navigation",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "portalName",
          "type": "string",
          "mutable": false,
          "attr": "portal-name",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "sectorNavigation",
          "type": "any",
          "mutable": false,
          "attr": "sector-navigation",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "scroll",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "scale-app-header"
      ],
      "dependencyGraph": {
        "scale-app-shell": [
          "scale-app-header"
        ],
        "scale-app-header": [
          "scale-nav-main",
          "app-mega-menu",
          "scale-nav-icon",
          "scale-nav-segment",
          "app-logo",
          "app-navigation-sector-mobile",
          "app-navigation-main-mobile"
        ],
        "scale-nav-icon": [
          "scale-icon"
        ],
        "app-navigation-main-mobile": [
          "scale-icon-navigation-left",
          "scale-icon-navigation-right"
        ]
      }
    },
    {
      "filePath": "./src/components/breadcrumb/breadcrumb.tsx",
      "encapsulation": "shadow",
      "tag": "scale-breadcrumb",
      "readme": "# scale-breadcrumb\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "separator",
          "type": "string",
          "mutable": false,
          "attr": "separator",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "base",
          "docs": ""
        },
        {
          "name": "list",
          "docs": ""
        },
        {
          "name": "list-item",
          "docs": ""
        },
        {
          "name": "separator",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "scale-icon-navigation-right"
      ],
      "dependencyGraph": {
        "scale-breadcrumb": [
          "scale-icon-navigation-right"
        ]
      }
    },
    {
      "filePath": "./src/components/button/button.tsx",
      "encapsulation": "shadow",
      "tag": "scale-button",
      "readme": "# scale-button\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaLabel",
          "type": "string",
          "mutable": false,
          "attr": "aria-label",
          "reflectToAttr": false,
          "docs": "(optional) aria-label attribute needed for icon-only buttons",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the button is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "(optional) When present, an <a> tag will be used",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "iconOnly",
          "type": "boolean",
          "mutable": false,
          "attr": "icon-only",
          "reflectToAttr": false,
          "docs": "(optional) Set to `true` when the button contains only an icon",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "iconPosition",
          "type": "\"after\" | \"before\"",
          "mutable": false,
          "attr": "icon-position",
          "reflectToAttr": true,
          "docs": "(optional) Icon position related to the label",
          "docsTags": [],
          "default": "'before'",
          "values": [
            {
              "value": "after",
              "type": "string"
            },
            {
              "value": "before",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"large\" | \"small\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The size of the button",
          "docsTags": [],
          "default": "'large'",
          "values": [
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "target",
          "type": "string",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "(optional) The target attribute for the <a> tag",
          "docsTags": [],
          "default": "'_self'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "type",
          "type": "\"button\" | \"reset\" | \"submit\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "(optional) Button type",
          "docsTags": [],
          "values": [
            {
              "value": "button",
              "type": "string"
            },
            {
              "value": "reset",
              "type": "string"
            },
            {
              "value": "submit",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "(optional) Button variant",
          "docsTags": [],
          "default": "'primary'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "click",
          "capture": true,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-button"
        ]
      }
    },
    {
      "filePath": "./src/components/card/card.tsx",
      "encapsulation": "shadow",
      "tag": "scale-card",
      "readme": "# scale-card\n",
      "docs": "",
      "docsTags": [],
      "usage": {
        "card": "# Default\n\n<scale-card>\n  <h1>Card Title</h1>\n  <p>This is card content</p>\n</scale-card>\n",
        "card-interactive": "### Interactive\n\n<scale-card href=\"http://example.com\" target=\"_blank\">\n  <p>click me</p>\n</scale-card>\n"
      },
      "props": [
        {
          "name": "clickCard",
          "type": "any",
          "mutable": false,
          "attr": "click-card",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) Label of the card",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "rel",
          "type": "string",
          "mutable": false,
          "attr": "rel",
          "reflectToAttr": false,
          "docs": "(optional) Link card rel",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "target",
          "type": "string",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "(optional) Link card target",
          "docsTags": [],
          "default": "'_self'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "to",
          "type": "string",
          "mutable": false,
          "attr": "to",
          "reflectToAttr": false,
          "docs": "(optional) Link card",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "body",
          "docs": ""
        },
        {
          "name": "border",
          "docs": ""
        }
      ],
      "dependents": [
        "scale-chart-stack-card"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-chart-stack-card": [
          "scale-card"
        ]
      }
    },
    {
      "filePath": "./src/components/carousel/carousel.tsx",
      "encapsulation": "shadow",
      "tag": "scale-carousel",
      "readme": "# scale-carousel\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "vertical",
          "type": "boolean",
          "mutable": false,
          "attr": "vertical",
          "reflectToAttr": false,
          "docs": "(optional) carousel display direction",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/chart-stack-card/chart-stack-card.tsx",
      "encapsulation": "none",
      "tag": "scale-chart-stack-card",
      "readme": "# scale-chart-stack-card\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "data",
          "type": "Record<\"type\" | \"value\" | \"percentage\", string>[] | string",
          "mutable": false,
          "attr": "data",
          "reflectToAttr": false,
          "docs": "Chart Data",
          "docsTags": [],
          "values": [
            {
              "type": "Record<\"type\""
            },
            {
              "value": "value",
              "type": "string"
            },
            {
              "type": "\"percentage\", string>[]"
            },
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "heading",
          "type": "string",
          "mutable": false,
          "attr": "heading",
          "reflectToAttr": false,
          "docs": "Chart Title",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "scale-card"
      ],
      "dependencyGraph": {
        "scale-chart-stack-card": [
          "scale-card"
        ]
      }
    },
    {
      "filePath": "./src/components/checkbox/checkbox.tsx",
      "encapsulation": "none",
      "tag": "scale-checkbox",
      "readme": "# scale-checkbox\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": false,
          "attr": "checked",
          "reflectToAttr": true,
          "docs": "(optional) Active switch",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Input disabled",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "helperText",
          "type": "string",
          "mutable": false,
          "attr": "helper-text",
          "reflectToAttr": false,
          "docs": "(optional) Input helper text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inputId",
          "type": "string",
          "mutable": false,
          "attr": "input-id",
          "reflectToAttr": false,
          "docs": "(optional) Input checkbox id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) Input label",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "(optional) Input name",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "status",
          "type": "string",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": false,
          "docs": "(optional) Input status",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "(optional) Input value",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the value has changed.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [
        "scale-icon-action-success"
      ],
      "dependencyGraph": {
        "scale-checkbox": [
          "scale-icon-action-success"
        ],
        "scale-data-grid": [
          "scale-checkbox"
        ]
      }
    },
    {
      "filePath": "./src/components/collapsible/collapsible.tsx",
      "encapsulation": "shadow",
      "tag": "scale-collapsible",
      "readme": "# scale-collapsible\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": true,
          "attr": "expanded",
          "reflectToAttr": true,
          "docs": "Set to `true` to expand",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleExpand",
          "detail": "CollapsibleEventDetail",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted so parent <scale-accordion> knows about it",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "button",
          "docs": ""
        },
        {
          "name": "button-text",
          "docs": ""
        },
        {
          "name": "content",
          "docs": ""
        },
        {
          "name": "heading",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "scale-icon-navigation-collapse-down"
      ],
      "dependencyGraph": {
        "scale-collapsible": [
          "scale-icon-navigation-collapse-down"
        ]
      }
    },
    {
      "filePath": "./src/components/data-grid/data-grid.tsx",
      "encapsulation": "shadow",
      "tag": "scale-data-grid",
      "readme": "# scale-data-grid\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "fields",
          "type": "any",
          "mutable": false,
          "attr": "fields",
          "reflectToAttr": false,
          "docs": "Input fields config array",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "freezeHeader",
          "type": "boolean",
          "mutable": false,
          "attr": "freeze-header",
          "reflectToAttr": false,
          "docs": "(optional) Freeze header row from scrolling",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "heading",
          "type": "string",
          "mutable": false,
          "attr": "heading",
          "reflectToAttr": false,
          "docs": "(optional) Heading string",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "height",
          "type": "string",
          "mutable": false,
          "attr": "height",
          "reflectToAttr": false,
          "docs": "(optional) Set static table height, by default will auto-resize",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "hideBorder",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-border",
          "reflectToAttr": false,
          "docs": "(optional) Set to true to remove border",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "hideHeader",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-header",
          "reflectToAttr": false,
          "docs": "(optional) Set to true to hide header row",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "hideInfo",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-info",
          "reflectToAttr": false,
          "docs": "(optional) Set to true to remove info footer block including pagination and selection status",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "hideMenu",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-menu",
          "reflectToAttr": false,
          "docs": "(optional) Set to true to hide settings menu",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "numbered",
          "type": "boolean",
          "mutable": false,
          "attr": "numbered",
          "reflectToAttr": false,
          "docs": "(optional) Set to true to add numbers column",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "pageSize",
          "type": "number",
          "mutable": false,
          "attr": "page-size",
          "reflectToAttr": false,
          "docs": "(optional) Set number of rows to display per pagination page",
          "docsTags": [],
          "default": "Infinity",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "rows",
          "type": "any",
          "mutable": false,
          "attr": "rows",
          "reflectToAttr": false,
          "docs": "Input data array",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "selectable",
          "type": "boolean",
          "mutable": false,
          "attr": "selectable",
          "reflectToAttr": false,
          "docs": "(optional) Set to true to add selection column",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selection",
          "type": "string[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Read-only selection array - populated with raw data from selected rows",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "string[]"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "shadeAlternate",
          "type": "boolean",
          "mutable": false,
          "attr": "shade-alternate",
          "reflectToAttr": false,
          "docs": "(optional) Shade every second row darker",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "any",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected css styles",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "visible",
          "type": "boolean",
          "mutable": false,
          "attr": "visible",
          "reflectToAttr": false,
          "docs": "(optional) Set to falseto hide table, used for nested tables to re-render upon toggle",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleEdit",
          "detail": "DataGridEditEventDetail",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event triggered every time the editable cells are changed, updating the original rows data",
          "docsTags": []
        },
        {
          "event": "scaleSort",
          "detail": "DataGridSortedEventDetail",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event triggered every time the data is sorted, changing original rows data",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "scale-menu-flyout",
        "scale-button",
        "scale-icon-service-settings",
        "scale-menu-flyout-list",
        "scale-menu-flyout-item",
        "scale-icon-action-sort",
        "scale-icon-navigation-collapse-up",
        "scale-icon-navigation-collapse-down",
        "scale-icon-action-hide-password",
        "scale-icon",
        "scale-checkbox",
        "scale-pagination",
        "scale-switch",
        "scale-progress-bar",
        "scale-link",
        "scale-text-field",
        "scale-dropdown",
        "scale-tag"
      ],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-menu-flyout",
          "scale-button",
          "scale-icon-service-settings",
          "scale-menu-flyout-list",
          "scale-menu-flyout-item",
          "scale-icon-action-sort",
          "scale-icon-navigation-collapse-up",
          "scale-icon-navigation-collapse-down",
          "scale-icon-action-hide-password",
          "scale-icon",
          "scale-checkbox",
          "scale-pagination",
          "scale-switch",
          "scale-progress-bar",
          "scale-link",
          "scale-text-field",
          "scale-dropdown",
          "scale-tag"
        ],
        "scale-menu-flyout-item": [
          "scale-icon-action-success",
          "scale-icon-navigation-right"
        ],
        "scale-checkbox": [
          "scale-icon-action-success"
        ],
        "scale-dropdown": [
          "scale-icon-navigation-collapse-down"
        ],
        "scale-tag": [
          "scale-icon-action-close"
        ]
      }
    },
    {
      "filePath": "./src/components/date-picker/date-picker.tsx",
      "encapsulation": "none",
      "tag": "scale-date-picker",
      "readme": "# scale-date-picker\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "dateAdapter",
          "type": "any",
          "mutable": false,
          "attr": "date-adapter",
          "reflectToAttr": false,
          "docs": "Date adapter, for custom parsing/formatting.\nMust be object with a `parse` function which accepts a `string` and returns a `Date`,\nand a `format` function which accepts a `Date` and returns a `string`.\nDefault is IS0-8601 parsing and formatting.",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "direction",
          "type": "\"left\" | \"right\"",
          "mutable": false,
          "attr": "direction",
          "reflectToAttr": false,
          "docs": "Forces the opening direction of the calendar modal to be always left or right.\nThis setting can be useful when the input is smaller than the opening date picker\nwould be as by default the picker always opens towards right.",
          "docsTags": [],
          "default": "'right'",
          "values": [
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": true,
          "docs": "Makes the date picker input component disabled. This prevents users from being able to\ninteract with the input, and conveys its inactive state to assistive technologies.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "firstDayOfWeek",
          "type": "any",
          "mutable": false,
          "attr": "first-day-of-week",
          "reflectToAttr": false,
          "docs": "Which day is considered first day of the week? `0` for Sunday, `1` for Monday, etc.\nDefault is Monday.",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "helperText",
          "type": "string",
          "mutable": false,
          "attr": "helper-text",
          "reflectToAttr": false,
          "docs": "(optional) Helper text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "identifier",
          "type": "string",
          "mutable": false,
          "attr": "identifier",
          "reflectToAttr": false,
          "docs": "Adds a unique identifier for the date picker input. Use this instead of html `id` attribute.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) Label",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "localization",
          "type": "{ buttonLabel: string; placeholder: string; selectedDateMessage: string; prevMonthLabel: string; nextMonthLabel: string; monthSelectLabel: string; yearSelectLabel: string; closeLabel: string; keyboardInstruction: string; calendarHeading: string; dayNames: DayNames; monthNames: MonthsNames; monthNamesShort: MonthsNames; locale: string | string[]; }",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Button labels, day names, month names, etc, used for localization.\nDefault is English.",
          "docsTags": [],
          "values": [
            {
              "type": "{ buttonLabel: string; placeholder: string; selectedDateMessage: string; prevMonthLabel: string; nextMonthLabel: string; monthSelectLabel: string; yearSelectLabel: string; closeLabel: string; keyboardInstruction: string; calendarHeading: string; dayNames: DayNames; monthNames: MonthsNames; monthNamesShort: MonthsNames; locale: string"
            },
            {
              "type": "string[]; }"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "max",
          "type": "string",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "Maximum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\nThis setting can be used alone or together with the min property.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "string",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "Minimum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\nThis setting can be used alone or together with the max property.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Name of the date picker input.",
          "docsTags": [],
          "default": "'date'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Should the input be marked as required?",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "role",
          "type": "string",
          "mutable": false,
          "attr": "role",
          "reflectToAttr": false,
          "docs": "Defines a specific role attribute for the date picker input.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) Size",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "status",
          "type": "string",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": false,
          "docs": "(optional) Status",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Date value. Must be in IS0-8601 format: YYYY-MM-DD.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "hide",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "hide(moveFocusToButton?: boolean) => Promise<void>",
          "parameters": [],
          "docs": "Hide the calendar modal. Set `moveFocusToButton` to false to prevent focus\nreturning to the date picker's button. Default is true.",
          "docsTags": []
        },
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the date picker's input. Use this method instead of the global `focus()`.",
          "docsTags": []
        },
        {
          "name": "show",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "show() => Promise<void>",
          "parameters": [],
          "docs": "Show the calendar modal, moving focus to the calendar inside.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "scaleBlur",
          "detail": "{ component: \"duet-date-picker\"; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event emitted the date picker input is blurred.",
          "docsTags": []
        },
        {
          "event": "scaleChange",
          "detail": "{ component: \"duet-date-picker\"; valueAsDate: Date; value: string; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event emitted when a date is selected.",
          "docsTags": []
        },
        {
          "event": "scaleFocus",
          "detail": "{ component: \"duet-date-picker\"; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event emitted the date picker input is focused.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "scale-icon-content-calendar",
        "duet-date-picker"
      ],
      "dependencyGraph": {
        "scale-date-picker": [
          "scale-icon-content-calendar",
          "duet-date-picker"
        ]
      }
    },
    {
      "filePath": "./src/components/divider/divider.tsx",
      "encapsulation": "shadow",
      "tag": "scale-divider",
      "readme": "# scale-divider\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "vertical",
          "type": "boolean",
          "mutable": false,
          "attr": "vertical",
          "reflectToAttr": false,
          "docs": "(optional) Divider vertical",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "rule-horizontal",
          "docs": ""
        },
        {
          "name": "rule-vertical",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/dropdown/dropdown.tsx",
      "encapsulation": "none",
      "tag": "scale-dropdown",
      "readme": "# scale-dropdown\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "controlled",
          "type": "boolean",
          "mutable": false,
          "attr": "controlled",
          "reflectToAttr": false,
          "docs": "(optional) Makes type `select` behave as a controlled component in React",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Input disabled",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "helperText",
          "type": "string",
          "mutable": false,
          "attr": "helper-text",
          "reflectToAttr": false,
          "docs": "(optional) Input helper text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inputId",
          "type": "string",
          "mutable": false,
          "attr": "input-id",
          "reflectToAttr": false,
          "docs": "(optional) Input checkbox id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) Input label",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "mutable": false,
          "attr": "multiple",
          "reflectToAttr": false,
          "docs": "(optional) select multiple options",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "(optional) Input name",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "(optional) Input required",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) Input size",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "status",
          "type": "string",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": false,
          "docs": "(optional) Input status",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "transparent",
          "type": "boolean",
          "mutable": false,
          "attr": "transparent",
          "reflectToAttr": false,
          "docs": "(optional) input background transparent",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "(optional) Input value",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "visibleSize",
          "type": "number",
          "mutable": false,
          "attr": "visible-size",
          "reflectToAttr": false,
          "docs": "(optional) the number of visible options in a select drop-down list",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleBlur",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input loses focus.",
          "docsTags": []
        },
        {
          "event": "scaleChange",
          "detail": "InputChangeEventDetail",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the value has changed.",
          "docsTags": []
        },
        {
          "event": "scaleFocus",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": []
        },
        {
          "event": "scaleInput",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "scaleKeyDown",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on keydown.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [
        "scale-icon-navigation-collapse-down"
      ],
      "dependencyGraph": {
        "scale-dropdown": [
          "scale-icon-navigation-collapse-down"
        ],
        "scale-data-grid": [
          "scale-dropdown"
        ]
      }
    },
    {
      "filePath": "./src/components/icon/icon.tsx",
      "encapsulation": "none",
      "tag": "scale-icon",
      "readme": "# scale-icon\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon as standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the svg element will get aria-hidden=\"true\"",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "fill",
          "type": "string",
          "mutable": false,
          "attr": "fill",
          "reflectToAttr": false,
          "docs": "The SVG `fill` attribute",
          "docsTags": [],
          "default": "'var(--icon-color, currentColor)'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "focusable",
          "type": "boolean",
          "mutable": false,
          "attr": "focusable",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the icon can receive focus",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "A name that will be used to reference an SVG object defined elsewhere,\nvia `<use xlink:href=\"\">`. `icon-` will be prepended to the name, so if\nyou pass `circle`, it will look for for the `icon-circle` id\ne.g. `<use xlink:href=\"#icon-circle\">`.\nIf there is no element in the document with the id by the name provided,\nthis component will render empty.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "path",
          "type": "string",
          "mutable": false,
          "attr": "path",
          "reflectToAttr": false,
          "docs": "A path shape to be used in the `d` attribute of a path element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Will be used for both `width` and `height`, all icons are square.\nKeep in mind the `viewBox` attribute is set to \"0 0 24 24\".",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "stroke",
          "type": "string",
          "mutable": false,
          "attr": "stroke",
          "reflectToAttr": false,
          "docs": "The SVG `stroke` attribute",
          "docsTags": [],
          "default": "'transparent'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-app-footer",
        "scale-data-grid",
        "scale-input",
        "scale-nav-icon"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-app-footer": [
          "scale-icon"
        ],
        "scale-data-grid": [
          "scale-icon"
        ],
        "scale-input": [
          "scale-icon"
        ],
        "scale-nav-icon": [
          "scale-icon"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/action-add/action-add.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-add",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-add-card/action-add-card.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-add-card",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-auto-login/action-auto-login.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-auto-login",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-backspace/action-backspace.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-backspace",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-changelog/action-changelog.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-changelog",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-circle-add/action-circle-add.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-circle-add",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-circle-close/action-circle-close.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-circle-close",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-modal"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-modal": [
          "scale-icon-action-circle-close"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/action-close/action-close.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-close",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-tag"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-tag": [
          "scale-icon-action-close"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/action-copy-paste/action-copy-paste.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-copy-paste",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-cut-paste/action-cut-paste.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-cut-paste",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-disabled-microphone/action-disabled-microphone.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-disabled-microphone",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-download/action-download.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-download",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-drag-and-drop/action-drag-and-drop.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-drag-and-drop",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-edit/action-edit.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-edit",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-fast-forward/action-fast-forward.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-fast-forward",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-favorite/action-favorite.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-favorite",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-filter/action-filter.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-filter",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-forward/action-forward.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-forward",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-full-screen/action-full-screen.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-full-screen",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-hide-password/action-hide-password.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-hide-password",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-icon-action-hide-password"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/action-install/action-install.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-install",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-link/action-link.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-link",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-logout/action-logout.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-logout",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-loop/action-loop.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-loop",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-menu/action-menu.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-menu",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-microphone/action-microphone.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-microphone",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-minimize-screen/action-minimize-screen.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-minimize-screen",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-more/action-more.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-more",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-move/action-move.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-move",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-mute/action-mute.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-mute",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-notification/action-notification.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-notification",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-pause/action-pause.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-pause",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-pin/action-pin.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-pin",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-play/action-play.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-play",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-pop-up-window/action-pop-up-window.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-pop-up-window",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-print/action-print.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-print",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-random/action-random.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-random",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-refresh/action-refresh.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-refresh",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-remove/action-remove.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-remove",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-restart/action-restart.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-restart",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-search/action-search.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-search",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-shopping-cart/action-shopping-cart.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-shopping-cart",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-show-password/action-show-password.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-show-password",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-sort/action-sort.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-sort",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-icon-action-sort"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/action-sound-on/action-sound-on.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-sound-on",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-stream-on/action-stream-on.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-stream-on",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-success/action-success.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-success",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-checkbox",
        "scale-menu-flyout-item"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-checkbox": [
          "scale-icon-action-success"
        ],
        "scale-menu-flyout-item": [
          "scale-icon-action-success"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/action-thumbs-down/action-thumbs-down.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-thumbs-down",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-thumbs-up/action-thumbs-up.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-thumbs-up",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-tiles-add/action-tiles-add.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-tiles-add",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-upload/action-upload.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-upload",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-volume-down/action-volume-down.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-volume-down",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-volume-up/action-volume-up.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-volume-up",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-zoom-in/action-zoom-in.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-zoom-in",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/action-zoom-out/action-zoom-out.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-action-zoom-out",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/alert-compliance/alert-compliance.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-alert-compliance",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/alert-error/alert-error.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-alert-error",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/alert-help/alert-help.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-alert-help",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/alert-imprint-dataprivacy/alert-imprint-dataprivacy.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-alert-imprint-dataprivacy",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/alert-information/alert-information.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-alert-information",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/alert-legal/alert-legal.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-alert-legal",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/alert-security/alert-security.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-alert-security",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/alert-warning/alert-warning.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-alert-warning",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/communication-call-incoming/communication-call-incoming.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-communication-call-incoming",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/communication-call-outgoing/communication-call-outgoing.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-communication-call-outgoing",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/communication-chat/communication-chat.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-communication-chat",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/communication-email/communication-email.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-communication-email",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/communication-end-call/communication-end-call.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-communication-end-call",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/communication-feedback/communication-feedback.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-communication-feedback",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/communication-message/communication-message.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-communication-message",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/communication-phone-number/communication-phone-number.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-communication-phone-number",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/communication-recipient/communication-recipient.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-communication-recipient",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/communication-voice-message/communication-voice-message.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-communication-voice-message",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-achievement/content-achievement.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-achievement",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-applications/content-applications.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-applications",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-biometric/content-biometric.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-biometric",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-bookmark/content-bookmark.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-bookmark",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-calendar/content-calendar.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-calendar",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-date-picker"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-date-picker": [
          "scale-icon-content-calendar"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/content-clipboard/content-clipboard.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-clipboard",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-clock/content-clock.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-clock",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-credit-card/content-credit-card.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-credit-card",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-delivery/content-delivery.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-delivery",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-digital-banking/content-digital-banking.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-digital-banking",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-digital-media/content-digital-media.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-digital-media",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-draft-file/content-draft-file.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-draft-file",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-e-sim/content-e-sim.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-e-sim",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-eu/content-eu.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-eu",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-features/content-features.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-features",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-flexible-tariffs/content-flexible-tariffs.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-flexible-tariffs",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-heart/content-heart.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-heart",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-history/content-history.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-history",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-international/content-international.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-international",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-international-sms/content-international-sms.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-international-sms",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-interview/content-interview.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-interview",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-key/content-key.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-key",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-lock/content-lock.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-lock",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-media-folder/content-media-folder.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-media-folder",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-money-at/content-money-at.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-money-at",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-music/content-music.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-music",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-news/content-news.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-news",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-prepaid-activate/content-prepaid-activate.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-prepaid-activate",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-price-tag/content-price-tag.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-price-tag",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-rss/content-rss.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-rss",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-shop/content-shop.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-shop",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-signal/content-signal.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-signal",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-sim-card/content-sim-card.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-sim-card",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-smile/content-smile.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-smile",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-tariffs/content-tariffs.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-tariffs",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-transport/content-transport.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-transport",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-unlock/content-unlock.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-unlock",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-voucher/content-voucher.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-voucher",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/content-wallet/content-wallet.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-content-wallet",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-add-device/device-add-device.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-add-device",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-camera/device-camera.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-camera",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-change-camera/device-change-camera.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-change-camera",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-computer/device-computer.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-computer",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-device-phone/device-device-phone.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-device-phone",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-device-router/device-device-router.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-device-router",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-device-tv/device-device-tv.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-device-tv",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-device-watch/device-device-watch.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-device-watch",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-fixed-line-services/device-fixed-line-services.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-fixed-line-services",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-media-receiver/device-media-receiver.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-media-receiver",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-mobile-devices-combination/device-mobile-devices-combination.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-mobile-devices-combination",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-mobile-equipment/device-mobile-equipment.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-mobile-equipment",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-mobile-phone-insurance/device-mobile-phone-insurance.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-mobile-phone-insurance",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-mobile-services/device-mobile-services.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-mobile-services",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-no-camera/device-no-camera.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-no-camera",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-photo-camera/device-photo-camera.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-photo-camera",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-remote-controller/device-remote-controller.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-remote-controller",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-replacement-mobilephone/device-replacement-mobilephone.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-replacement-mobilephone",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-screen-rotate/device-screen-rotate.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-screen-rotate",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-smart-speaker/device-smart-speaker.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-smart-speaker",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/device-tv-and-mobile/device-tv-and-mobile.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-device-tv-and-mobile",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/home-home/home-home.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-home-home",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/home-internet-at-home/home-internet-at-home.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-home-internet-at-home",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/home-iot/home-iot.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-home-iot",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/home-no-wifi/home-no-wifi.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-home-no-wifi",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/home-smarthome/home-smarthome.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-home-smarthome",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/home-wifi/home-wifi.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-home-wifi",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/navigation-circle-top-up/navigation-circle-top-up.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-circle-top-up",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/navigation-collapse-down/navigation-collapse-down.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-collapse-down",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-collapsible",
        "scale-data-grid",
        "scale-dropdown",
        "scale-sidebar-nav",
        "scale-sidebar-nav-collapsible"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-collapsible": [
          "scale-icon-navigation-collapse-down"
        ],
        "scale-data-grid": [
          "scale-icon-navigation-collapse-down"
        ],
        "scale-dropdown": [
          "scale-icon-navigation-collapse-down"
        ],
        "scale-sidebar-nav": [
          "scale-icon-navigation-collapse-down"
        ],
        "scale-sidebar-nav-collapsible": [
          "scale-icon-navigation-collapse-down"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/navigation-collapse-up/navigation-collapse-up.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-collapse-up",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-icon-navigation-collapse-up"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/navigation-external-link/navigation-external-link.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-external-link",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/navigation-internal-link/navigation-internal-link.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-internal-link",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/navigation-left/navigation-left.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-left",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "app-navigation-main-mobile"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "app-navigation-main-mobile": [
          "scale-icon-navigation-left"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/navigation-location/navigation-location.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-location",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/navigation-my-location/navigation-my-location.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-my-location",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/navigation-right/navigation-right.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-right",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "app-navigation-main-mobile",
        "scale-breadcrumb",
        "scale-menu-flyout-item"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "app-navigation-main-mobile": [
          "scale-icon-navigation-right"
        ],
        "scale-breadcrumb": [
          "scale-icon-navigation-right"
        ],
        "scale-menu-flyout-item": [
          "scale-icon-navigation-right"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/navigation-start/navigation-start.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-start",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/navigation-top-up/navigation-top-up.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-navigation-top-up",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/process-order-status/process-order-status.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-process-order-status",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/process-processing/process-processing.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-process-processing",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/service-devices-service/service-devices-service.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-service-devices-service",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/service-maintanance/service-maintanance.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-service-maintanance",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/service-services/service-services.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-service-services",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/service-settings/service-settings.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-service-settings",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-icon-service-settings"
        ]
      }
    },
    {
      "filePath": "./src/components/icons/service-support/service-support.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-service-support",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/t-product-magenta-cloud/t-product-magenta-cloud.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-t-product-magenta-cloud",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/t-product-magenta-tv/t-product-magenta-tv.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-t-product-magenta-tv",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/t-product-magentaone/t-product-magentaone.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-t-product-magentaone",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/t-product-measure-internet-speed/t-product-measure-internet-speed.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-t-product-measure-internet-speed",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/t-product-seamless-connectivity/t-product-seamless-connectivity.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-t-product-seamless-connectivity",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/t-product-telekom-shop-b/t-product-telekom-shop-b.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-t-product-telekom-shop-b",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/t-product-usage/t-product-usage.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-t-product-usage",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-analytics/user-file-analytics.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-analytics",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-attachment/user-file-attachment.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-attachment",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-audio-file/user-file-audio-file.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-audio-file",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-billing/user-file-billing.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-billing",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-bussines-users/user-file-bussines-users.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-bussines-users",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-communities/user-file-communities.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-communities",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-contacts/user-file-contacts.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-contacts",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-contracts/user-file-contracts.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-contracts",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-families/user-file-families.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-families",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-handshake/user-file-handshake.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-handshake",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-id-card/user-file-id-card.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-id-card",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-image-file/user-file-image-file.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-image-file",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-logout/user-file-logout.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-logout",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-pdf-file/user-file-pdf-file.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-pdf-file",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-switch-users/user-file-switch-users.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-switch-users",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-user/user-file-user.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-user",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/icons/user-file-videos/user-file-videos.tsx",
      "encapsulation": "none",
      "tag": "scale-icon-user-file-videos",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'currentColor'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "decorative",
          "type": "boolean",
          "mutable": false,
          "attr": "decorative",
          "reflectToAttr": false,
          "docs": "(optional) If `true` the SVG element will get `aria-hidden=\"true\"`",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "(optional) If `true`, the icon changes visually",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The width and height in pixels",
          "docsTags": [],
          "default": "24",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/input/input.tsx",
      "encapsulation": "none",
      "tag": "scale-input",
      "readme": "# scale-input\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": false,
          "attr": "checked",
          "reflectToAttr": true,
          "docs": "(optional) Active switch",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "cols",
          "type": "number",
          "mutable": false,
          "attr": "cols",
          "reflectToAttr": false,
          "docs": "(optional) textarea column",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "controlled",
          "type": "boolean",
          "mutable": false,
          "attr": "controlled",
          "reflectToAttr": false,
          "docs": "(optional) Makes type `select` behave as a controlled component in React",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "counter",
          "type": "boolean",
          "mutable": false,
          "attr": "counter",
          "reflectToAttr": false,
          "docs": "(optional) Input counter",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Input disabled",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "helperText",
          "type": "string",
          "mutable": false,
          "attr": "helper-text",
          "reflectToAttr": false,
          "docs": "(optional) Input helper text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "(optional) Input checkbox checked icon",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inputId",
          "type": "string",
          "mutable": false,
          "attr": "input-id",
          "reflectToAttr": false,
          "docs": "(optional) Input checkbox id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) Input label",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxLength",
          "type": "number",
          "mutable": false,
          "attr": "max-length",
          "reflectToAttr": false,
          "docs": "(optional) Input max length",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "minLength",
          "type": "number",
          "mutable": false,
          "attr": "min-length",
          "reflectToAttr": false,
          "docs": "(optional) Input min length",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "mutable": false,
          "attr": "multiple",
          "reflectToAttr": false,
          "docs": "(optional) select multiple options",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "(optional) Input name",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "(optional) Input placeHolder",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "(optional) Input required",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "resize",
          "type": "\"horizontal\" | \"none\" | \"unset\" | \"vertical\"",
          "mutable": false,
          "attr": "resize",
          "reflectToAttr": false,
          "docs": "(optional) textarea resize",
          "docsTags": [],
          "values": [
            {
              "value": "horizontal",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "unset",
              "type": "string"
            },
            {
              "value": "vertical",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "rows",
          "type": "number",
          "mutable": false,
          "attr": "rows",
          "reflectToAttr": false,
          "docs": "(optional) textarea row",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) Input size",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "status",
          "type": "string",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": false,
          "docs": "(optional) Input status",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "transparent",
          "type": "boolean",
          "mutable": false,
          "attr": "transparent",
          "reflectToAttr": false,
          "docs": "(optional) input background transparent",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "type",
          "type": "\"checkbox\" | \"email\" | \"hidden\" | \"number\" | \"password\" | \"radio\" | \"select\" | \"tel\" | \"text\" | \"textarea\" | \"url\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "(optional) Input type",
          "docsTags": [],
          "default": "'text'",
          "values": [
            {
              "value": "checkbox",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "hidden",
              "type": "string"
            },
            {
              "value": "number",
              "type": "string"
            },
            {
              "value": "password",
              "type": "string"
            },
            {
              "value": "radio",
              "type": "string"
            },
            {
              "value": "select",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "textarea",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "(optional) Input value",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "variant",
          "type": "\"animated\" | \"static\"",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "(optional) Input label variant",
          "docsTags": [],
          "default": "'static'",
          "values": [
            {
              "value": "animated",
              "type": "string"
            },
            {
              "value": "static",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "visibleSize",
          "type": "number",
          "mutable": false,
          "attr": "visible-size",
          "reflectToAttr": false,
          "docs": "(optional) the number of visible options in a select drop-down list",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleBlur",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input loses focus.",
          "docsTags": []
        },
        {
          "event": "scaleChange",
          "detail": "InputChangeEventDetail",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the value has changed.",
          "docsTags": []
        },
        {
          "event": "scaleFocus",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": []
        },
        {
          "event": "scaleInput",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "scaleKeyDown",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on keydown.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "scale-icon"
      ],
      "dependencyGraph": {
        "scale-input": [
          "scale-icon"
        ]
      }
    },
    {
      "filePath": "./src/components/link/link.tsx",
      "encapsulation": "shadow",
      "tag": "scale-link",
      "readme": "# scale-link\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {
        "link": "## Default\n\n<scale-link href=\"http://example.com\">\n\tLabel\n</scale-link>\n\n## Target\n\n<scale-link href=\"http://example.com\" target=\"_blank\">\n\tLabel\n</scale-link>\n\n## Disabled\n\n<scale-link href=\"http://example.com\" disabled>\n\tLabel\n</scale-link>\n\n## Block\n\n<scale-link href=\"http://example.com\" block=\"true\">\n\tLabel\n</scale-link>\n\n## No underline\n\n<scale-link href=\"http://example.com\" underline=\"false\">\n\tLabel\n</scale-link>\n\n## Icon\n\n<scale-link href=\"http://example.com\" icon=\"M23.55 9.4c-.25-.7-.85-1.2-1.6-1.25l-6-.45-2.25-5.55C13.4 1.45 12.75 1 12 1s-1.4.45-1.7 1.15L8 7.75 2 8.2c-.75.05-1.35.55-1.6 1.25s0 1.45.55 1.95l4.6 3.9-1.4 5.8c-.15.7.1 1.45.7 1.9.3.25.7.35 1.05.35.35 0 .65-.1.95-.25L12 19.9l5.1 3.2c.65.4 1.4.35 2-.05.6-.45.85-1.2.7-1.9l-1.45-5.85 4.6-3.9c.6-.55.85-1.3.6-2zm-1.5.8l-5.3 4.5 1.65 6.75c.05.2-.05.3-.1.35-.05.05-.2.1-.35 0L12 18.1l-5.9 3.65c-.15.1-.3.05-.35 0-.05-.05-.15-.15-.1-.35l1.65-6.75-5.3-4.5c-.15-.1-.1-.25-.1-.35 0-.05.1-.2.25-.2l6.95-.5 2.65-6.45c.05-.15.15-.15.25-.15s.2.05.3.2l2.65 6.45 6.95.5c.2 0 .25.15.25.2 0 .1 0 .25-.1.35z\">\n\tLabel\n</scale-link>\n\n## Icon size\n\n<scale-link href=\"http://example.com\" icon-size=\"16\" icon=\"M23.55 9.4c-.25-.7-.85-1.2-1.6-1.25l-6-.45-2.25-5.55C13.4 1.45 12.75 1 12 1s-1.4.45-1.7 1.15L8 7.75 2 8.2c-.75.05-1.35.55-1.6 1.25s0 1.45.55 1.95l4.6 3.9-1.4 5.8c-.15.7.1 1.45.7 1.9.3.25.7.35 1.05.35.35 0 .65-.1.95-.25L12 19.9l5.1 3.2c.65.4 1.4.35 2-.05.6-.45.85-1.2.7-1.9l-1.45-5.85 4.6-3.9c.6-.55.85-1.3.6-2zm-1.5.8l-5.3 4.5 1.65 6.75c.05.2-.05.3-.1.35-.05.05-.2.1-.35 0L12 18.1l-5.9 3.65c-.15.1-.3.05-.35 0-.05-.05-.15-.15-.1-.35l1.65-6.75-5.3-4.5c-.15-.1-.1-.25-.1-.35 0-.05.1-.2.25-.2l6.95-.5 2.65-6.45c.05-.15.15-.15.25-.15s.2.05.3.2l2.65 6.45 6.95.5c.2 0 .25.15.25.2 0 .1 0 .25-.1.35z\">\n\tLabel\n</scale-link>\n"
      },
      "props": [
        {
          "name": "block",
          "type": "boolean",
          "mutable": false,
          "attr": "block",
          "reflectToAttr": false,
          "docs": "(optional) Block link",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Disabled link",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "(optional) Link href",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "target",
          "type": "string",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "(optional) Link open a new tag",
          "docsTags": [],
          "default": "'_self'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "(optional) Link variant",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "wrapper",
          "docs": ""
        }
      ],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-link"
        ]
      }
    },
    {
      "filePath": "./src/components/list/list.tsx",
      "encapsulation": "shadow",
      "tag": "scale-list",
      "readme": "# scale-list\n",
      "docs": "",
      "docsTags": [
        {
          "text": "https://github.com/carbon-design-system/carbon-web-components/tree/master/src/components/list",
          "name": "see"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "ordered",
          "type": "boolean",
          "mutable": false,
          "attr": "ordered",
          "reflectToAttr": false,
          "docs": "(optional) Make the list ordered (ol)",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/list-item/list-item.tsx",
      "encapsulation": "shadow",
      "tag": "scale-list-item",
      "readme": "# scale-list-item\n\n\n",
      "docs": "",
      "docsTags": [
        {
          "text": "styles for custom icon (no-marker prop?)",
          "name": "todo"
        },
        {
          "text": "https://github.com/carbon-design-system/carbon-web-components/tree/master/src/components/list",
          "name": "see"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "index",
          "type": "number",
          "mutable": true,
          "attr": "index",
          "reflectToAttr": false,
          "docs": "Index number, useful only for styling the `ordered` type",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "marker",
          "type": "boolean",
          "mutable": false,
          "attr": "marker",
          "reflectToAttr": false,
          "docs": "If `false`, no marker or left padding will be visible",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ordered",
          "type": "boolean",
          "mutable": false,
          "attr": "ordered",
          "reflectToAttr": false,
          "docs": "Whether this is a child of an ordered scale-list, gets set automatically by its parent",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "nested-list",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/loading-spinner/loading-spinner.tsx",
      "encapsulation": "shadow",
      "tag": "scale-loading-spinner",
      "readme": "# scale-loading\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "alignment",
          "type": "\"horizontal\" | \"vertical\"",
          "mutable": false,
          "attr": "alignment",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'horizontal'",
          "values": [
            {
              "value": "horizontal",
              "type": "string"
            },
            {
              "value": "vertical",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"large\" | \"small\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'small'",
          "values": [
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "text",
          "type": "string",
          "mutable": false,
          "attr": "text",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "variant",
          "type": "\"primary\" | \"white\"",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "'primary'",
          "values": [
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "white",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "circle",
          "docs": ""
        },
        {
          "name": "container",
          "docs": ""
        },
        {
          "name": "text",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/telekom/logo/logo.tsx",
      "encapsulation": "shadow",
      "tag": "scale-logo",
      "readme": "# scale-logo\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "default": "'Telekom Logo'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "clickHandler",
          "type": "any",
          "mutable": false,
          "attr": "click-handler",
          "reflectToAttr": false,
          "docs": "(optional) Possibility for adding a onClick Event",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "(optional) Set a link",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "language",
          "type": "\"\" | \"cz\" | \"de\" | \"en\" | \"hr\" | \"hu\" | \"me\" | \"mk_kyr\" | \"mk_lat\" | \"ro\" | \"sk\"",
          "mutable": false,
          "attr": "language",
          "reflectToAttr": false,
          "docs": "(optional) Language of the logo text/ claimOff showes just the T Logo",
          "docsTags": [],
          "default": "'en'",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "cz",
              "type": "string"
            },
            {
              "value": "de",
              "type": "string"
            },
            {
              "value": "en",
              "type": "string"
            },
            {
              "value": "hr",
              "type": "string"
            },
            {
              "value": "hu",
              "type": "string"
            },
            {
              "value": "me",
              "type": "string"
            },
            {
              "value": "mk_kyr",
              "type": "string"
            },
            {
              "value": "mk_lat",
              "type": "string"
            },
            {
              "value": "ro",
              "type": "string"
            },
            {
              "value": "sk",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The height in pixels",
          "docsTags": [],
          "default": "36",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "transparent",
          "type": "boolean",
          "mutable": false,
          "attr": "transparent",
          "reflectToAttr": false,
          "docs": "(optional) Set transparent background",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "variant",
          "type": "\"magenta\" | \"white\"",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "(optional) Variant/color of the logo text and logo",
          "docsTags": [],
          "default": "'magenta'",
          "values": [
            {
              "value": "magenta",
              "type": "string"
            },
            {
              "value": "white",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "scale-logo-svg"
      ],
      "dependencyGraph": {
        "scale-logo": [
          "scale-logo-svg"
        ]
      }
    },
    {
      "filePath": "./src/components/telekom/logo/logo-svg.tsx",
      "encapsulation": "none",
      "tag": "scale-logo-svg",
      "readme": "# scale-logo\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "accessibilityTitle",
          "type": "string",
          "mutable": false,
          "attr": "accessibility-title",
          "reflectToAttr": false,
          "docs": "(optional) When using the icon standalone, make it meaningful for accessibility",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "(optional) Sets the icon color via the `fill` attribute",
          "docsTags": [],
          "default": "'magenta'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "language",
          "type": "\"\" | \"cz\" | \"de\" | \"en\" | \"hr\" | \"hu\" | \"me\" | \"mk_kyr\" | \"mk_lat\" | \"ro\" | \"sk\"",
          "mutable": false,
          "attr": "language",
          "reflectToAttr": false,
          "docs": "(optional) The languages for the Text behind the Logo",
          "docsTags": [],
          "default": "'en'",
          "values": [
            {
              "type": "\"\""
            },
            {
              "value": "cz",
              "type": "string"
            },
            {
              "value": "de",
              "type": "string"
            },
            {
              "value": "en",
              "type": "string"
            },
            {
              "value": "hr",
              "type": "string"
            },
            {
              "value": "hu",
              "type": "string"
            },
            {
              "value": "me",
              "type": "string"
            },
            {
              "value": "mk_kyr",
              "type": "string"
            },
            {
              "value": "mk_lat",
              "type": "string"
            },
            {
              "value": "ro",
              "type": "string"
            },
            {
              "value": "sk",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) The height in pixels",
          "docsTags": [],
          "default": "36",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-logo"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-logo": [
          "scale-logo-svg"
        ]
      }
    },
    {
      "filePath": "./src/components/menu-flyout/menu-flyout.tsx",
      "encapsulation": "shadow",
      "tag": "scale-menu-flyout",
      "readme": "# scale-menu\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "closeOnSelect",
          "type": "boolean",
          "mutable": false,
          "attr": "close-on-select",
          "reflectToAttr": false,
          "docs": "(optional) Determines whether the dropdown should close when a menu item is selected",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "direction",
          "type": "\"bottom-left\" | \"bottom-right\" | \"left\" | \"right\" | \"top-left\" | \"top-right\"",
          "mutable": true,
          "attr": "direction",
          "reflectToAttr": false,
          "docs": "(optional) Set preference for where the menu appears, space permitting",
          "docsTags": [],
          "values": [
            {
              "value": "bottom-left",
              "type": "string"
            },
            {
              "value": "bottom-right",
              "type": "string"
            },
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            },
            {
              "value": "top-left",
              "type": "string"
            },
            {
              "value": "top-right",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "open",
          "type": "boolean",
          "mutable": true,
          "attr": "open",
          "reflectToAttr": true,
          "docs": "(optional) Tracks the menu list open state",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleClose",
          "detail": "{ id: number; cascadeLevel: number; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event triggered when menu list closed",
          "docsTags": []
        },
        {
          "event": "scaleOpen",
          "detail": "{ id: number; cascadeLevel: number; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event triggered when menu list opened",
          "docsTags": []
        },
        {
          "event": "scaleSelect",
          "detail": "{ item: HTMLElement; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event triggered when nested menu item selected",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "scroll",
          "target": "document",
          "capture": true,
          "passive": true
        },
        {
          "event": "resize",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "scaleClose",
          "capture": false,
          "passive": false
        },
        {
          "event": "scaleOpen",
          "target": "body",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-menu-flyout"
        ]
      }
    },
    {
      "filePath": "./src/components/menu-flyout-divider/menu-flyout-divider.tsx",
      "encapsulation": "shadow",
      "tag": "scale-menu-flyout-divider",
      "readme": "# scale-menu-flyout-divider\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "base",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/menu-flyout-item/menu-flyout-item.tsx",
      "encapsulation": "shadow",
      "tag": "scale-menu-flyout-item",
      "readme": "# scale-menu-flyout-item\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "active",
          "type": "boolean",
          "mutable": false,
          "attr": "active",
          "reflectToAttr": false,
          "docs": "(optional) Used by cascading menus to set when open",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "cascade",
          "type": "boolean",
          "mutable": false,
          "attr": "cascade",
          "reflectToAttr": false,
          "docs": "(optional) Set to true to display arrow icon suffix",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "checked",
          "type": "any",
          "mutable": false,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "(optional) Set to true to display check prefix, false to display empty prefix",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "(optional) value",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "removeFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "removeFocus() => Promise<void>",
          "parameters": [],
          "docs": "Removes the focus from the item",
          "docsTags": []
        },
        {
          "name": "setFocus",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "setFocus() => Promise<void>",
          "parameters": [],
          "docs": "Sets the focus on the item",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "base",
          "docs": ""
        },
        {
          "name": "label",
          "docs": ""
        },
        {
          "name": "prefix",
          "docs": ""
        },
        {
          "name": "suffix",
          "docs": ""
        }
      ],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [
        "scale-icon-action-success",
        "scale-icon-navigation-right"
      ],
      "dependencyGraph": {
        "scale-menu-flyout-item": [
          "scale-icon-action-success",
          "scale-icon-navigation-right"
        ],
        "scale-data-grid": [
          "scale-menu-flyout-item"
        ]
      }
    },
    {
      "filePath": "./src/components/menu-flyout-list/menu-flyout-list.tsx",
      "encapsulation": "shadow",
      "tag": "scale-menu-flyout-list",
      "readme": "# scale-menu-flyout-list\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "opened",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "opened() => Promise<void>",
          "parameters": [],
          "docs": "Menu calls this once opened and rendered",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "scaleSelect",
          "detail": "{ item: HTMLElement; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event triggered every time the data is edited, changing original rows data",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "resize",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "base",
          "docs": ""
        }
      ],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-menu-flyout-list"
        ]
      }
    },
    {
      "filePath": "./src/components/modal/modal.tsx",
      "encapsulation": "shadow",
      "tag": "scale-modal",
      "readme": "# scale-modal\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "alignActions",
          "type": "\"left\" | \"right\"",
          "mutable": false,
          "attr": "align-actions",
          "reflectToAttr": false,
          "docs": "(optional) Alignment of action buttons",
          "docsTags": [],
          "default": "'right'",
          "values": [
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "closeButtonLabel",
          "type": "string",
          "mutable": false,
          "attr": "close-button-label",
          "reflectToAttr": false,
          "docs": "(optional) Label for close button",
          "docsTags": [],
          "default": "'Close Pop-up'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "customClass",
          "type": "string",
          "mutable": false,
          "attr": "custom-class",
          "reflectToAttr": false,
          "docs": "(optional) Custom class",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "duration",
          "type": "number",
          "mutable": false,
          "attr": "duration",
          "reflectToAttr": false,
          "docs": "(optional) Transition duration",
          "docsTags": [],
          "default": "200",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "heading",
          "type": "string",
          "mutable": false,
          "attr": "heading",
          "reflectToAttr": false,
          "docs": "Modal heading",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "opened",
          "type": "boolean",
          "mutable": false,
          "attr": "opened",
          "reflectToAttr": true,
          "docs": "(optional) If `true`, the Modal is open.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) Modal size",
          "docsTags": [],
          "default": "'default'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleClose",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        },
        {
          "event": "scaleOpen",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "keydown",
          "target": "window",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "backdrop",
          "docs": ""
        },
        {
          "name": "close-button",
          "docs": ""
        },
        {
          "name": "heading",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "scale-icon-action-circle-close"
      ],
      "dependencyGraph": {
        "scale-modal": [
          "scale-icon-action-circle-close"
        ]
      }
    },
    {
      "filePath": "./src/components/telekom/nav-icon/nav-icon.tsx",
      "encapsulation": "none",
      "tag": "scale-nav-icon",
      "readme": "# scale-nav-icon\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "clickLink",
          "type": "any",
          "mutable": false,
          "attr": "click-link",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "(optional) href value",
          "docsTags": [],
          "default": "'javascript:void(0);'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "isActive",
          "type": "boolean",
          "mutable": false,
          "attr": "is-active",
          "reflectToAttr": false,
          "docs": "(optional) if this item is active",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "isMobileMenuOpen",
          "type": "boolean",
          "mutable": false,
          "attr": "is-mobile-menu-open",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "refMobileMenuToggle",
          "type": "any",
          "mutable": false,
          "attr": "ref-mobile-menu-toggle",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-app-header"
      ],
      "dependencies": [
        "scale-icon"
      ],
      "dependencyGraph": {
        "scale-nav-icon": [
          "scale-icon"
        ],
        "scale-app-header": [
          "scale-nav-icon"
        ]
      }
    },
    {
      "filePath": "./src/components/telekom/nav-main/nav-main.tsx",
      "encapsulation": "none",
      "tag": "scale-nav-main",
      "readme": "# scale-nav-main\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "clickLink",
          "type": "any",
          "mutable": false,
          "attr": "click-link",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "(optional) href value",
          "docsTags": [],
          "default": "'javascript:void(0);'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "isActive",
          "type": "boolean",
          "mutable": false,
          "attr": "is-active",
          "reflectToAttr": false,
          "docs": "(optional) if this item is active",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "isMegaMenuVisible",
          "type": "boolean",
          "mutable": false,
          "attr": "is-mega-menu-visible",
          "reflectToAttr": false,
          "docs": "(optional) if this mega-menu is visible",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "(optional) name value",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-app-header"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-app-header": [
          "scale-nav-main"
        ]
      }
    },
    {
      "filePath": "./src/components/telekom/nav-segment/nav-segment.tsx",
      "encapsulation": "none",
      "tag": "scale-nav-segment",
      "readme": "# scale-nav-segment\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "(optional) href value",
          "docsTags": [],
          "default": "'javascript:void(0);'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "isActive",
          "type": "boolean",
          "mutable": false,
          "attr": "is-active",
          "reflectToAttr": false,
          "docs": "(optional) if this item is active",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-app-header"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-app-header": [
          "scale-nav-segment"
        ]
      }
    },
    {
      "filePath": "./src/components/pagination/pagination.tsx",
      "encapsulation": "shadow",
      "tag": "scale-pagination",
      "readme": "# scale-pagination\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "hideBorders",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-borders",
          "reflectToAttr": false,
          "docs": "(optional) Set to true to hide top and bottom borders",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "pageSize",
          "type": "number",
          "mutable": false,
          "attr": "page-size",
          "reflectToAttr": false,
          "docs": "(optional) Set number of rows/elements to show per page",
          "docsTags": [],
          "default": "10",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "startElement",
          "type": "number",
          "mutable": false,
          "attr": "start-element",
          "reflectToAttr": false,
          "docs": "(optional) Index of first element to display",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "totalElements",
          "type": "number",
          "mutable": false,
          "attr": "total-elements",
          "reflectToAttr": false,
          "docs": "(optional) Total number of rows/elements used to calculate page displays",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scalePagination",
          "detail": "{ startElement?: number; currentPage?: number; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event triggered every time the data is edited, changing original rows data",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "first-prompt",
          "docs": ""
        },
        {
          "name": "info",
          "docs": ""
        },
        {
          "name": "last-prompt",
          "docs": ""
        },
        {
          "name": "next-prompt",
          "docs": ""
        },
        {
          "name": "prev-prompt",
          "docs": ""
        }
      ],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-pagination"
        ]
      }
    },
    {
      "filePath": "./src/components/progress-bar/progress-bar.tsx",
      "encapsulation": "shadow",
      "tag": "scale-progress-bar",
      "readme": "# scale-progress-bar\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "busy",
          "type": "boolean",
          "mutable": false,
          "attr": "busy",
          "reflectToAttr": false,
          "docs": "(optional) Progress bar busy switch",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "customColor",
          "type": "string",
          "mutable": false,
          "attr": "custom-color",
          "reflectToAttr": false,
          "docs": "(optional) Progress bar customColor",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Progress bar disabled",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "hasError",
          "type": "boolean",
          "mutable": false,
          "attr": "has-error",
          "reflectToAttr": false,
          "docs": "(optional) Progress bar error",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "(optional) Progress bar icon indicator",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) Progress bar label",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "percentage",
          "type": "number",
          "mutable": false,
          "attr": "percentage",
          "reflectToAttr": false,
          "docs": "(required) Progress bar percentage",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "progressBarId",
          "type": "string",
          "mutable": false,
          "attr": "progress-bar-id",
          "reflectToAttr": false,
          "docs": "(optional) Progress bar id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "showStatus",
          "type": "boolean",
          "mutable": false,
          "attr": "show-status",
          "reflectToAttr": false,
          "docs": "(optional) Progress bar percentage text",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "statusDescription",
          "type": "string",
          "mutable": false,
          "attr": "status-description",
          "reflectToAttr": false,
          "docs": "(optional) Progress bar status description text",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "statusInside",
          "type": "boolean",
          "mutable": false,
          "attr": "status-inside",
          "reflectToAttr": false,
          "docs": "(optional) Progress text display inside bar",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "strokeWidth",
          "type": "number",
          "mutable": false,
          "attr": "stroke-width",
          "reflectToAttr": false,
          "docs": "(optional) Progress bar stroke width",
          "docsTags": [],
          "default": "6",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "inner",
          "docs": ""
        },
        {
          "name": "inner-status",
          "docs": ""
        },
        {
          "name": "label",
          "docs": ""
        },
        {
          "name": "outer",
          "docs": ""
        },
        {
          "name": "status",
          "docs": ""
        },
        {
          "name": "status-description",
          "docs": ""
        },
        {
          "name": "wrapper",
          "docs": ""
        }
      ],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-progress-bar"
        ]
      }
    },
    {
      "filePath": "./src/components/radio-button/radio-button.tsx",
      "encapsulation": "none",
      "tag": "scale-radio-button",
      "readme": "# scale-radio-button\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": false,
          "attr": "checked",
          "reflectToAttr": true,
          "docs": "(optional) Active switch",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Input disabled",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "helperText",
          "type": "string",
          "mutable": false,
          "attr": "helper-text",
          "reflectToAttr": false,
          "docs": "(optional) Input helper text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inputId",
          "type": "string",
          "mutable": false,
          "attr": "input-id",
          "reflectToAttr": false,
          "docs": "(optional) Input checkbox id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) Input label",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "(optional) Input name",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "status",
          "type": "string",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": false,
          "docs": "(optional) Input status",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "(optional) Input value",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleChange",
          "detail": "InputChangeEventDetail",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the value has changed.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/rating-stars/rating-stars.tsx",
      "encapsulation": "shadow",
      "tag": "scale-rating-stars",
      "readme": "# scale-rating-stars\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaTranslation",
          "type": "string",
          "mutable": true,
          "attr": "aria-translation",
          "reflectToAttr": false,
          "docs": "(optional) ariaTranslation",
          "docsTags": [],
          "default": "`${this.rating} out of ${this.numOfStars} stars`",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": true,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hoverValue",
          "type": "number",
          "mutable": true,
          "attr": "hover-value",
          "reflectToAttr": false,
          "docs": "(optional) hoverValue",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "isHovering",
          "type": "boolean",
          "mutable": true,
          "attr": "is-hovering",
          "reflectToAttr": false,
          "docs": "(optional) isHovering",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) slider label",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "numOfStars",
          "type": "number",
          "mutable": true,
          "attr": "num-of-stars",
          "reflectToAttr": false,
          "docs": "(optional) numOfStars",
          "docsTags": [],
          "default": "5",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "precision",
          "type": "number",
          "mutable": false,
          "attr": "precision",
          "reflectToAttr": false,
          "docs": "(optional) precision",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "rating",
          "type": "number",
          "mutable": true,
          "attr": "rating",
          "reflectToAttr": false,
          "docs": "(optional) rating",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "small",
          "type": "boolean",
          "mutable": true,
          "attr": "small",
          "reflectToAttr": false,
          "docs": "(optional) small",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/sidebar-nav/sidebar-nav.tsx",
      "encapsulation": "shadow",
      "tag": "scale-sidebar-nav",
      "readme": "# scale-sidebar-nav\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaLabel",
          "type": "string",
          "mutable": false,
          "attr": "aria-label",
          "reflectToAttr": false,
          "docs": "From mdn: A brief description of the purpose of the navigation,\nomitting the term \"navigation\", as the screen reader will read\nboth the role and the contents of the label.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "collapsible",
          "type": "boolean",
          "mutable": true,
          "attr": "collapsible",
          "reflectToAttr": true,
          "docs": "Set to `true` to make the sidebar toggleable (useful for small screens)",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "collapsibleLabel",
          "type": "string",
          "mutable": false,
          "attr": "collapsible-label",
          "reflectToAttr": false,
          "docs": "Label for toggle button",
          "docsTags": [],
          "default": "'Menu'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "collapsibleMediaQuery",
          "type": "string",
          "mutable": false,
          "attr": "collapsible-media-query",
          "reflectToAttr": false,
          "docs": "Automatically set `collapsible` based on this media query",
          "docsTags": [],
          "default": "'(max-width: 30em)'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Extra styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "icon",
          "docs": ""
        },
        {
          "name": "list",
          "docs": ""
        },
        {
          "name": "toggle-button",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "scale-icon-navigation-collapse-down"
      ],
      "dependencyGraph": {
        "scale-sidebar-nav": [
          "scale-icon-navigation-collapse-down"
        ]
      }
    },
    {
      "filePath": "./src/components/sidebar-nav-collapsible/sidebar-nav-collapsible.tsx",
      "encapsulation": "shadow",
      "tag": "scale-sidebar-nav-collapsible",
      "readme": "# scale-sidebar-nav-collapsible\n\nWe tried adding ::-moz-focus-inner for the button but JSS fails to parse that selector.\n\n- https://developer.mozilla.org/en-US/docs/Web/CSS/::-moz-focus-inner\n- https://stackoverflow.com/a/199319\n",
      "docs": "We tried adding ::-moz-focus-inner for the button but JSS fails to parse that selector.\n\n- https://developer.mozilla.org/en-US/docs/Web/CSS/::-moz-focus-inner\n- https://stackoverflow.com/a/199319",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "active",
          "type": "boolean",
          "mutable": false,
          "attr": "active",
          "reflectToAttr": false,
          "docs": "Label and icon get the active color",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "bold",
          "type": "boolean",
          "mutable": false,
          "attr": "bold",
          "reflectToAttr": false,
          "docs": "Bold label and icon",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "condensed",
          "type": "boolean",
          "mutable": false,
          "attr": "condensed",
          "reflectToAttr": false,
          "docs": "Used normally for third level items",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": true,
          "attr": "expanded",
          "reflectToAttr": true,
          "docs": "Set this to `true` to expand",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "The URL where the link should point to",
          "docsTags": [],
          "default": "'#'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text for the button",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "nestingLevel",
          "type": "number",
          "mutable": false,
          "attr": "nesting-level",
          "reflectToAttr": false,
          "docs": "Nesting level within the <scale-sidebar-nav> parent, gets set automatically",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Extra styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "tag",
          "type": "string",
          "mutable": false,
          "attr": "tag",
          "reflectToAttr": false,
          "docs": "The parent wrapper",
          "docsTags": [],
          "default": "'li'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "icon",
          "docs": ""
        },
        {
          "name": "list",
          "docs": ""
        },
        {
          "name": "wrapper",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "scale-icon-navigation-collapse-down"
      ],
      "dependencyGraph": {
        "scale-sidebar-nav-collapsible": [
          "scale-icon-navigation-collapse-down"
        ]
      }
    },
    {
      "filePath": "./src/components/sidebar-nav-item/sidebar-nav-item.tsx",
      "encapsulation": "shadow",
      "tag": "scale-sidebar-nav-item",
      "readme": "# scale-sidebar-nav-item\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "active",
          "type": "boolean",
          "mutable": true,
          "attr": "active",
          "reflectToAttr": true,
          "docs": "Text gets the active color",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "bold",
          "type": "boolean",
          "mutable": false,
          "attr": "bold",
          "reflectToAttr": false,
          "docs": "Bold text",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "condensed",
          "type": "boolean",
          "mutable": false,
          "attr": "condensed",
          "reflectToAttr": false,
          "docs": "Used normally for third level items, remove the bottom border",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "current",
          "type": "boolean | string",
          "mutable": false,
          "attr": "current",
          "reflectToAttr": false,
          "docs": "Mark the child link as \"current\" with `aria-current=page`.\nProvide the text hint if needed, default is: \"Zurzeit aktiv\"",
          "docsTags": [],
          "default": "null",
          "values": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "nestingLevel",
          "type": "number",
          "mutable": false,
          "attr": "nesting-level",
          "reflectToAttr": false,
          "docs": "Nesting level within the <scale-sidebar-nav> parent, gets set automatically",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Extra styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/slider/slider.tsx",
      "encapsulation": "shadow",
      "tag": "scale-slider",
      "readme": "# scale-slider\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "customColor",
          "type": "string",
          "mutable": false,
          "attr": "custom-color",
          "reflectToAttr": false,
          "docs": "(optional) slider custom color",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) slider label",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "max",
          "type": "number",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "(optional) the maximal value of the slider",
          "docsTags": [],
          "default": "100",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "min",
          "type": "number",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "t(optional) he minimal value of the slider",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "showValue",
          "type": "boolean",
          "mutable": false,
          "attr": "show-value",
          "reflectToAttr": false,
          "docs": "(optional) slider display value",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "sliderId",
          "type": "string",
          "mutable": false,
          "attr": "slider-id",
          "reflectToAttr": false,
          "docs": "(optional) Slider id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "step",
          "type": "number",
          "mutable": false,
          "attr": "step",
          "reflectToAttr": false,
          "docs": "(optional) the step size to increase or decrease when dragging slider",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "thumbLarge",
          "type": "boolean",
          "mutable": false,
          "attr": "thumb-large",
          "reflectToAttr": false,
          "docs": "(optional) larger thumb",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "trackSmall",
          "type": "boolean",
          "mutable": false,
          "attr": "track-small",
          "reflectToAttr": false,
          "docs": "(optional) smaller track",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "number",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "(optional) the display value of the slider",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleChange",
          "detail": "number",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "bar",
          "docs": ""
        },
        {
          "name": "display-value",
          "docs": ""
        },
        {
          "name": "label",
          "docs": ""
        },
        {
          "name": "thumb",
          "docs": ""
        },
        {
          "name": "thumb-wrapper",
          "docs": ""
        },
        {
          "name": "track",
          "docs": ""
        },
        {
          "name": "track-wrapper",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/ssr-slot-fix/ssr-slot-fix.tsx",
      "encapsulation": "none",
      "tag": "scale-ssr-slot-fix",
      "readme": "# scale-ssr-slot-fix\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/switch/switch.tsx",
      "encapsulation": "none",
      "tag": "scale-switch",
      "readme": "# scale-switch\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": false,
          "attr": "checked",
          "reflectToAttr": true,
          "docs": "(optional) Active switch",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Disabled switch",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inputId",
          "type": "string",
          "mutable": false,
          "attr": "input-id",
          "reflectToAttr": false,
          "docs": "(optional) Input id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) switch label",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the switch was clicked",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-switch"
        ]
      }
    },
    {
      "filePath": "./src/components/tab-header/tab-header.tsx",
      "encapsulation": "shadow",
      "tag": "scale-tab-header",
      "readme": "# scale-tab-header\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "small",
          "type": "boolean",
          "mutable": false,
          "attr": "small",
          "reflectToAttr": false,
          "docs": "True for smaller height and font size",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tab-nav/tab-nav.tsx",
      "encapsulation": "shadow",
      "tag": "scale-tab-nav",
      "readme": "# scale-tab-nav\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "small",
          "type": "boolean",
          "mutable": false,
          "attr": "small",
          "reflectToAttr": false,
          "docs": "True for smaller height and font size in tab headers.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "click",
          "capture": false,
          "passive": false
        },
        {
          "event": "keydown",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tab-panel/tab-panel.tsx",
      "encapsulation": "shadow",
      "tag": "scale-tab-panel",
      "readme": "# scale-tab-panel\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "small",
          "type": "boolean",
          "mutable": false,
          "attr": "small",
          "reflectToAttr": false,
          "docs": "True for smaller height and font size",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/table/table.tsx",
      "encapsulation": "none",
      "tag": "scale-table",
      "readme": "# scale-table\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {
        "table": "### Default\n\n<scale-table>\n  <table>\n    <thead>\n    <tr>\n      <th>Title</th>\n      <th>Stats</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td>Jane</td>\n      <td>9.356</td>\n    </tr>\n    <tr>\n      <td>Jack</td>\n      <td>3.356</td>\n    </tr>\n    <tr>\n      <td>John</td>\n      <td>3.356</td>\n    </tr>\n    </tbody>\n    <tfoot>\n    <tr>\n      <td>Total</td>\n      <td>100.245,10</td>\n    </tr>\n    </tfoot>\n  </table>\n</scale-table>\n\n### Small size\n\n<scale-table size=\"small\">\n  <table>\n    <thead>\n    <tr>\n      <th>Title</th>\n      <th>Stats</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td>Jane</td>\n      <td>9.356</td>\n    </tr>\n    <tr>\n      <td>Jack</td>\n      <td>3.356</td>\n    </tr>\n    <tr>\n      <td>John</td>\n      <td>3.356</td>\n    </tr>\n    </tbody>\n    <tfoot>\n    <tr>\n      <td>Total</td>\n      <td>100.245,10</td>\n    </tr>\n    </tfoot>\n  </table>\n</scale-table>\n\n### Full sorting example\n\n<scale-table show-sort=\"true\">\n  <table id=\"sortable-table\">\n    <div style=\"padding: 20px 8px 0px 8px;\">\n      <scale-text size=\"h5\">Table title</scale-text>\n    </div>\n    <thead>\n    <tr>\n      <!--  Pay attention to the usage of `th` `aria-sort` attribute-->\n      <!--  which supports all the native values: `descending`, `ascending`, `none`, `other`.-->\n      <th aria-sort=\"ascending\" onclick=\"sortTable(this)\">Title</th>\n      <!--  When you want to disable sorting for a particular column,-->\n      <!--  add the `aria-disabled` attribute to the `th`.-->\n      <th aria-disabled=\"true\" onclick=\"sortTable(this)\">Tags</th>\n      <th onclick=\"sortTable(this)\">Stats</th>\n      <th onclick=\"sortTable(this)\" style=\"text-align: right;\">Time</th>\n      <th onclick=\"sortTable(this)\" style=\"text-align: right;\">\n        Euros\n      </th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td>Jane</td>\n      <td>\n        <scale-tag size=\"small\" style=\"margin-right: 8px\"\n        >Other</scale-tag\n        >\n        <scale-tag size=\"small\" style=\"margin-right: 8px\"\n        >N/A</scale-tag\n        >\n        <scale-tag size=\"small\">Demo</scale-tag>\n      </td>\n      <td>\n        <div style=\"display: inline-flex; align-items: center;\">\n          <span style=\"margin-right: 8px\">9.356</span>\n          <scale-progress-bar\n                  size=\"info\"\n                  style=\" max-width: 120px;\"\n                  stroke-width=\"6\"\n                  percentage=\"90\"\n          />\n        </div>\n      </td>\n      <td style=\"text-align: right; font-weight: 100;\">00:00:20</td>\n      <td style=\"text-align: right; font-weight: 100;\">100.245,10</td>\n    </tr>\n    <tr>\n      <td>Jack</td>\n      <td>\n        <scale-tag size=\"small\" style=\"margin-right: 8px\"\n        >Other</scale-tag\n        >\n        <scale-tag size=\"small\" style=\"margin-right: 8px\"\n        >N/A</scale-tag\n        >\n        <scale-tag size=\"small\">Demo</scale-tag>\n      </td>\n      <td>\n        <div style=\"display: inline-flex; align-items: center;\">\n          <span style=\"margin-right: 8px\">3.356</span>\n          <scale-progress-bar\n                  size=\"info\"\n                  style=\" max-width: 120px;\"\n                  stroke-width=\"6\"\n                  percentage=\"90\"\n          />\n        </div>\n      </td>\n      <td style=\"text-align: right; font-weight: 100;\">00:00:30</td>\n      <td style=\"text-align: right; font-weight: 100;\">100.345,10</td>\n    </tr>\n    <tr>\n      <td>John</td>\n      <td>\n        <scale-tag size=\"small\" style=\"margin-right: 8px\"\n        >Other</scale-tag\n        >\n        <scale-tag size=\"small\" style=\"margin-right: 8px\"\n        >N/A</scale-tag\n        >\n        <scale-tag size=\"small\">Demo</scale-tag>\n      </td>\n      <td>\n        <div style=\"display: inline-flex; align-items: center;\">\n          <span style=\"margin-right: 8px\">6.356</span>\n          <scale-progress-bar\n                  size=\"info\"\n                  style=\" max-width: 120px;\"\n                  stroke-width=\"6\"\n                  percentage=\"90\"\n          />\n        </div>\n      </td>\n      <td style=\"text-align: right; font-weight: 100;\">00:00:40</td>\n      <td style=\"text-align: right; font-weight: 100;\">100.445,10</td>\n    </tr>\n    </tbody>\n    <tfoot>\n    <tr>\n      <td>Total</td>\n      <td />\n      <td />\n      <td style=\"text-align: right;\">00:00:20</td>\n      <td style=\"text-align: right;\">100.245,10</td>\n    </tr>\n    </tfoot>\n  </table>\n  <script>\n    function getNextSort(sort) {\n      if (!sort || [\"none\", \"other\"].includes(sort)) {\n        return \"ascending\";\n      }\n      if (sort === \"ascending\") {\n        return \"descending\";\n      }\n      return \"none\";\n    };\n    \n    function sortTable(th) {\n      const currentSort = th.getAttribute(\"aria-sort\");\n      const nextSort = getNextSort(currentSort);\n      const tableHeaders = Array.from(document.getElementsByTagName(\"TH\"));\n      const columnIndex = tableHeaders.findIndex((x) => x === th);\n    \n      // clean up previous aria-sort value\n      tableHeaders.forEach((tableHeader) => {\n        tableHeader.setAttribute(\"aria-sort\", \"none\");\n      });\n    \n      // set actual sort\n      th.setAttribute(\"aria-sort\", nextSort);\n    \n      // Taken from:\n      // https://www.w3schools.com/howto/tryit.asp?filename=tryhow_js_sort_table\n      var table, rows, switching, i, x, y, shouldSwitch;\n      table = document.getElementById(\"sortable-table\");\n      switching = true;\n      /*Make a loop that will continue until\n        no switching has been done:*/\n      while (switching) {\n        //start by saying: no switching is done:\n        switching = false;\n        rows = table.rows;\n        /*Loop through all table rows (except the\n            first, which contains table headers):*/\n        for (i = 1; i < rows.length - 1; i++) {\n          //start by saying there should be no switching:\n          shouldSwitch = false;\n    \n          /*Get the two elements you want to compare,\n                one from current row and one from the next:*/\n          x = rows[i].getElementsByTagName(\"TD\")[columnIndex];\n          y = rows[i + 1].getElementsByTagName(\"TD\")[columnIndex];\n    \n          if (\n            ![\"descending\", \"ascending\"].includes(nextSort) ||\n            x.parentElement.parentElement.tagName === \"TFOOT\" ||\n            y.parentElement.parentElement.tagName === \"TFOOT\"\n          ) {\n            break;\n          }\n    \n          //check if the two rows should switch place:\n          if (\n            (nextSort === \"ascending\" ? y : x).innerHTML.toLowerCase() >\n            (nextSort === \"ascending\" ? x : y).innerHTML.toLowerCase()\n          ) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n        if (shouldSwitch) {\n          /*If a switch has been marked, make the switch\n                and mark that a switch has been done:*/\n          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n          switching = true;\n        }\n      }\n    }\n  </script>\n</scale-table>\n"
      },
      "props": [
        {
          "name": "showSort",
          "type": "boolean",
          "mutable": false,
          "attr": "show-sort",
          "reflectToAttr": false,
          "docs": "(optional) Display sort arrows on/off",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) Visual size",
          "docsTags": [],
          "default": "'default'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/tag/tag.tsx",
      "encapsulation": "shadow",
      "tag": "scale-tag",
      "readme": "# scale-tag\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {
        "tag": "### Default\n\n<scale-tag>\n  Label\n</scale-tag>\n\n### Pill\n\n<scale-tag pill>\n  Label\n</scale-tag>\n\n### Link\n\n<scale-tag href=\"http://example.com\">\n  Label\n</scale-tag>\n"
      },
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Tag disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "dismissText",
          "type": "string",
          "mutable": false,
          "attr": "dismiss-text",
          "reflectToAttr": false,
          "docs": "(optional) Dismiss label",
          "docsTags": [],
          "default": "'dismiss'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "dismissable",
          "type": "boolean",
          "mutable": false,
          "attr": "dismissable",
          "reflectToAttr": false,
          "docs": "(optional) Tag dismissable",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "(optional) Tag href",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) Tag size",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "target",
          "type": "string",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "(optional) Tag target",
          "docsTags": [],
          "default": "'_self'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "(optional) Tag variant",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleClose",
          "detail": "MouseEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "(optional) Close icon click event",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "button-dismissable",
          "docs": ""
        }
      ],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [
        "scale-icon-action-close"
      ],
      "dependencyGraph": {
        "scale-tag": [
          "scale-icon-action-close"
        ],
        "scale-data-grid": [
          "scale-tag"
        ]
      }
    },
    {
      "filePath": "./src/components/text-field/text-field.tsx",
      "encapsulation": "none",
      "tag": "scale-text-field",
      "readme": "# scale-text-field\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "counter",
          "type": "boolean",
          "mutable": false,
          "attr": "counter",
          "reflectToAttr": false,
          "docs": "(optional) Input counter",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Input disabled",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "helperText",
          "type": "string",
          "mutable": false,
          "attr": "helper-text",
          "reflectToAttr": false,
          "docs": "(optional) Input helper text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inputId",
          "type": "string",
          "mutable": false,
          "attr": "input-id",
          "reflectToAttr": false,
          "docs": "(optional) Input checkbox id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) Input label",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxLength",
          "type": "number",
          "mutable": false,
          "attr": "max-length",
          "reflectToAttr": false,
          "docs": "(optional) Input max length",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "minLength",
          "type": "number",
          "mutable": false,
          "attr": "min-length",
          "reflectToAttr": false,
          "docs": "(optional) Input min length",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "(optional) Input name",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "(optional) Input placeHolder",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "(optional) Input readonly",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "(optional) Input required",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) Input size",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "status",
          "type": "string",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": false,
          "docs": "(optional) Input status",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "transparent",
          "type": "boolean",
          "mutable": false,
          "attr": "transparent",
          "reflectToAttr": false,
          "docs": "(optional) input background transparent",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "type",
          "type": "\"date\" | \"email\" | \"hidden\" | \"number\" | \"password\" | \"tel\" | \"text\" | \"url\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "(optional) Input type",
          "docsTags": [],
          "default": "'text'",
          "values": [
            {
              "value": "date",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "hidden",
              "type": "string"
            },
            {
              "value": "number",
              "type": "string"
            },
            {
              "value": "password",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "(optional) Input value",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleBlur",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input loses focus.",
          "docsTags": []
        },
        {
          "event": "scaleChange",
          "detail": "InputChangeEventDetail",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the value has changed.",
          "docsTags": []
        },
        {
          "event": "scaleFocus",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": []
        },
        {
          "event": "scaleInput",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "scaleKeyDown",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on keydown.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "scale-data-grid"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "scale-data-grid": [
          "scale-text-field"
        ]
      }
    },
    {
      "filePath": "./src/components/textarea/textarea.tsx",
      "encapsulation": "none",
      "tag": "scale-textarea",
      "readme": "# scale-textarea\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "cols",
          "type": "number",
          "mutable": false,
          "attr": "cols",
          "reflectToAttr": false,
          "docs": "(optional) textarea column",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "counter",
          "type": "boolean",
          "mutable": false,
          "attr": "counter",
          "reflectToAttr": false,
          "docs": "(optional) Input counter",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "(optional) Input disabled",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "helperText",
          "type": "string",
          "mutable": false,
          "attr": "helper-text",
          "reflectToAttr": false,
          "docs": "(optional) Input helper text",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inputId",
          "type": "string",
          "mutable": false,
          "attr": "input-id",
          "reflectToAttr": false,
          "docs": "(optional) Input checkbox id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "(optional) Input label",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxLength",
          "type": "number",
          "mutable": false,
          "attr": "max-length",
          "reflectToAttr": false,
          "docs": "(optional) Input max length",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "minLength",
          "type": "number",
          "mutable": false,
          "attr": "min-length",
          "reflectToAttr": false,
          "docs": "(optional) Input min length",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "(optional) Input name",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "(optional) Input placeHolder",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "(optional) Input readonly",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "(optional) Input required",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "resize",
          "type": "\"horizontal\" | \"none\" | \"unset\" | \"vertical\"",
          "mutable": false,
          "attr": "resize",
          "reflectToAttr": false,
          "docs": "(optional) textarea resize",
          "docsTags": [],
          "values": [
            {
              "value": "horizontal",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "unset",
              "type": "string"
            },
            {
              "value": "vertical",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "rows",
          "type": "number",
          "mutable": false,
          "attr": "rows",
          "reflectToAttr": false,
          "docs": "(optional) textarea row",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "status",
          "type": "string",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": false,
          "docs": "(optional) Input status",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": false,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "transparent",
          "type": "boolean",
          "mutable": false,
          "attr": "transparent",
          "reflectToAttr": false,
          "docs": "(optional) input background transparent",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "(optional) Input value",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "scaleBlur",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input loses focus.",
          "docsTags": []
        },
        {
          "event": "scaleChange",
          "detail": "InputChangeEventDetail",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the value has changed.",
          "docsTags": []
        },
        {
          "event": "scaleFocus",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input has focus.",
          "docsTags": []
        },
        {
          "event": "scaleInput",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when a keyboard input occurred.",
          "docsTags": []
        },
        {
          "event": "scaleKeyDown",
          "detail": "KeyboardEvent",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on keydown.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/toast/toast.tsx",
      "encapsulation": "shadow",
      "tag": "scale-toast",
      "readme": "# scale-toast\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "animated",
          "type": "boolean",
          "mutable": false,
          "attr": "animated",
          "reflectToAttr": false,
          "docs": "(optional) Animated toast",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "autoHide",
          "type": "boolean | number",
          "mutable": false,
          "attr": "auto-hide",
          "reflectToAttr": false,
          "docs": "(optional) Toast autohide time",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "fadeDuration",
          "type": "number",
          "mutable": false,
          "attr": "fade-duration",
          "reflectToAttr": false,
          "docs": "(optional) Toast fade duration",
          "docsTags": [],
          "default": "500",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "opened",
          "type": "boolean",
          "mutable": false,
          "attr": "opened",
          "reflectToAttr": true,
          "docs": "(optional) Toast opened",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "positionRight",
          "type": "number",
          "mutable": false,
          "attr": "position-right",
          "reflectToAttr": false,
          "docs": "(optional) Toast position right",
          "docsTags": [],
          "default": "12",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "positionTop",
          "type": "number",
          "mutable": false,
          "attr": "position-top",
          "reflectToAttr": false,
          "docs": "(optional) Toast position at the top",
          "docsTags": [],
          "default": "12",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "string",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "(optional) Toast size",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "styles",
          "type": "string",
          "mutable": false,
          "attr": "styles",
          "reflectToAttr": true,
          "docs": "(optional) Injected CSS styles",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "time",
          "type": "number",
          "mutable": false,
          "attr": "time",
          "reflectToAttr": false,
          "docs": "(optional) Toast time",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "variant",
          "type": "string",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "(optional) Toast variant",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "open",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "open() => Promise<void>",
          "parameters": [],
          "docs": "Toast method: open()",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "body",
          "docs": ""
        },
        {
          "name": "header",
          "docs": ""
        },
        {
          "name": "progress",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    }
  ]
}