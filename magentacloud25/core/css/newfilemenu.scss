@use 'variables';

// Add button newFileMenu
.newFileMenu {
	padding: 0.813rem 0.625rem;
	box-shadow: var(--scl-shadow-level-2);
	border-radius: 8px;
	.menuitem {
		.displayname {
			&:hover {
				color: var(--magenta-color);
			}
			padding-left: 0.5rem;
		}
	}
	ul {
		>li {
			&:last-child {
				display: none;
			}
		}
	}
}
.bubble {
	li {
		>button {
			&:hover {
				background-color: unset !important;
			}
			&:focus {
				background-color: unset !important;
			}
		}
		>a {
			&:hover {
				background-color: unset !important;
			}
			&:focus {
				background-color: unset !important;
			}
		}
		>.menuitem {
			&:hover {
				background-color: unset !important;
			}
			&:focus {
				background-color: unset !important;
			}
		}
	}
	filter: none !important;
}
.popovermenu {
	li {
		>button {
			&:hover {
				background-color: unset !important;
			}
			&:focus {
				background-color: unset !important;
			}
		}
		>a {
			&:hover {
				background-color: unset !important;
			}
			&:focus {
				background-color: unset !important;
			}
		}
		>.menuitem {
			&:hover {
				background-color: unset !important;
			}
			&:focus {
				background-color: unset !important;
			}
		}
	}
	filter: none !important;
}
.actions.creatable {
	.popovermenu.menu-left {
		a {
			width: unset !important;
			height: unset !important;
		}
	}
}
.app-navigation-entry-menu {
	filter: none !important;
}
.menuitem {
	&:hover {
		span {
			color: var(--magenta-color) !important;
		}
	}
}

button {
	&:not(:disabled) {
		&:not(.primary) {
			&:hover {
				border-color: unset !important;
			}
			&:focus {
				border-color: unset !important;
			}
		}
	}
}
.button {
	&:not(:disabled) {
		&:not(.primary) {
			&:hover {
				border-color: unset !important;
			}
			&:focus {
				border-color: unset !important;
			}
		}
	}
}
.pager {
	li {
		a {
			&:not(:disabled) {
				&:not(.primary) {
					&:hover {
						border-color: unset !important;
					}
					&:focus {
						border-color: unset !important;
					}
				}
				&:not(.primary).active {
					border-color: unset !important;
				}
			}
		}
	}
}

.newFileMenu {
	.icon-upload {
		background-size: 24px !important;
	}
	.icon-folder {
		background-image: var(--icon-new-folder) !important;
		background-size: 24px !important;
	}
}
.icon-filetype-folder {
	background-image: var(--icon-new-folder) !important;
	background-size: 24px !important;
}

.newFileMenu {
	li {
		&:nth-child(1) {
			.menuitem {
				&:hover {
					span {
						filter: var(--color-background-magenta);
					}
				}
			}
		}
		&:nth-child(2) {
			.menuitem {
				&:hover {
					span {
						filter: var(--color-background-magenta);
					}
				}
			}
		}
		&:nth-child(3) {
			.menuitem {
				&:hover {
					span {
						filter: var(--color-background-magenta);
					}
				}
			}
		}
	}
}

/* office new file creation */
.newFileMenu {
	.icon-filetype-document {
		background-image: url(#{variables.$filetypes-image-path} + 'file-text-24.svg') !important;
	}
	.icon-filetype-spreadsheet {
		background-image: url(#{variables.$filetypes-image-path} + 'file-calculation-24.svg') !important;
	}
	.icon-filetype-presentation {
		background-image: url(#{variables.$filetypes-image-path} + 'file-presentation-24.svg') !important;
	}
	.icon-filetype-draw {
		background-image: url(#{variables.$filetypes-image-path} + 'file-analytics-24.svg') !important;
		background-size: contain !important;
	}
}



