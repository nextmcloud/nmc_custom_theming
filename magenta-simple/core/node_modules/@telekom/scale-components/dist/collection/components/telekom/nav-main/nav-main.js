/**
 * @license
 * Scale https://github.com/telekom/scale
 *
 * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import { Component, Prop, h, Element, Host } from '@stencil/core';
import classNames from 'classnames';
export class NavMain {
  constructor() {
    /** (optional) if this item is active */
    this.isActive = false;
    /** (optional) if this mega-menu is visible */
    this.isMegaMenuVisible = false;
    /** (optional) href value */
    this.href = 'javascript:void(0);';
  }
  componentWillLoad() {
    this.hasSlotMegaMenu = !!this.hostElement.querySelector('app-mega-menu');
  }
  render() {
    return (h(Host, null,
      h("li", { class: this.getCssClassMap() },
        h("a", { class: "main-navigation__item-link", href: this.href, "aria-current": this.isActive ? 'true' : 'false', "aria-haspopup": this.hasSlotMegaMenu ? 'true' : 'false', tabIndex: 0, onClick: this.clickLink },
          h("span", { class: "main-navigation__item-link-text" }, this.name),
          this.isActive && h("span", { class: "sr-only" }, "active")),
        h("slot", null))));
  }
  getCssClassMap() {
    return classNames('main-navigation__item', this.isMegaMenuVisible && 'mega-menu--visible', this.isActive && 'selected');
  }
  static get is() { return "scale-nav-main"; }
  static get originalStyleUrls() { return {
    "$": ["./nav-main.css"]
  }; }
  static get styleUrls() { return {
    "$": ["nav-main.css"]
  }; }
  static get properties() { return {
    "isActive": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "(optional) if this item is active"
      },
      "attribute": "is-active",
      "reflect": false,
      "defaultValue": "false"
    },
    "isMegaMenuVisible": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "(optional) if this mega-menu is visible"
      },
      "attribute": "is-mega-menu-visible",
      "reflect": false,
      "defaultValue": "false"
    },
    "href": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "(optional) href value"
      },
      "attribute": "href",
      "reflect": false,
      "defaultValue": "'javascript:void(0);'"
    },
    "name": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "(optional) name value"
      },
      "attribute": "name",
      "reflect": false
    },
    "clickLink": {
      "type": "any",
      "mutable": false,
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "click-link",
      "reflect": false
    }
  }; }
  static get elementRef() { return "hostElement"; }
}
