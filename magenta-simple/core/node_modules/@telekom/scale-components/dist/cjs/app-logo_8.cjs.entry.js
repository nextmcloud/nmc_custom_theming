'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-66a8d2d7.js');
const index$1 = require('./index-550fcacd.js');
const renderIcon = require('./render-icon-16c43c56.js');
const menuUtils = require('./menu-utils-1e20f360.js');

const appLogoCss = ".logo{display:flex;align-items:center}.logo>svg{width:100%;max-width:300px;height:auto}";

const Logo = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.href = 'javascript:void(0);';
    this.logoTitle = 'Telekom Logo';
    this.color = '#fff';
    this.claim = false;
  }
  render() {
    if (!this.claim) {
      return (index.h("a", { href: this.href, title: this.logoTitle }, index.h("svg", { width: "51", height: "24", viewBox: "0 0 51 24", xmlns: "http://www.w3.org/2000/svg" }, index.h("path", { d: "M0 15.8v-4.83h4.996v4.83H0zm15.235 0v-4.83h4.997v4.83h-4.997zm14.99 0v-4.83h4.995v4.83h-4.996zm14.988 0v-4.83h4.996v4.83h-4.996zM19.984 0l.248 8.415-1.31.219c-.243-2.48-.916-4.32-2.02-5.52-1.16-1.257-2.76-1.913-4.815-1.97V18.75c0 1.538.225 2.536.689 2.997.395.392 1.062.633 2.002.723.28.023.755.034 1.428.034v1.346H4.026v-1.346c.673 0 1.148-.011 1.427-.034.94-.09 1.608-.33 2.002-.723.465-.46.687-1.46.687-2.997V1.145c-2.055.056-3.652.712-4.813 1.968-1.103 1.201-1.776 3.041-2.02 5.521L0 8.415.247 0h19.737z", fill: this.color, "fill-rule": "nonzero" }))));
    }
    return (index.h("a", { class: "logo", href: this.href, title: this.logoTitle, onFocus: () => {
        window.scrollTo({ top: 0 });
      } }, index.h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 284 36" }, index.h("g", { fill: this.color, "fill-rule": "nonzero" }, this.claimLang === 'de' ? (index.h("path", { d: "M104.6 16v2.3h4.1v2h-4.1v2.5h4.2v2.1h-6.4v-11h6.4V16zM114 20.9h-1.1v4h-2.2v-11h4c2.1 0 3.6 1.3 3.6 3.5 0 1.7-.9 2.8-2.2 3.2l2.3 4.2h-2.5l-1.9-3.9zm-1.1-2.1h1.7c.9 0 1.5-.5 1.5-1.4 0-.9-.6-1.4-1.5-1.4h-1.7v2.8zM120 13.9h2.2v8.9h3.9v2.1H120zM129.5 16v2.3h4.1v2h-4.1v2.5h4.3v2.1h-6.5v-11h6.5V16zM143.1 21.8c0 1.7-1 3-3.4 3h-4.1V13.9h4.2c2.2 0 3.2 1.3 3.2 2.9 0 1.1-.5 2-1.3 2.5v.1c.9.4 1.4 1.3 1.4 2.4zm-5.2-5.9v2.5h1.7c.7 0 1.2-.5 1.2-1.3s-.5-1.3-1.2-1.3h-1.7v.1zm2.9 5.7c0-.8-.5-1.3-1.3-1.3h-1.6v2.6h1.6c.8 0 1.3-.5 1.3-1.3zM147 16v2.3h4.1v2H147v2.5h4.3v2.1h-6.5v-11h6.5V16zM161.6 13.9v11h-2.2l-3.9-6.9h-.1v6.9h-2.3v-11h2.3l3.9 6.9h.1v-6.9zM166 22.3v2.3c0 1.7-.7 2.8-2.5 2.9v-1.2c.9-.1 1.2-.5 1.2-1.4v-.1h-1.2v-2.5h2.5zM183.9 13.9l-2.9 11h-2.4l-1.8-7.2h-.1l-1.8 7.2h-2.4l-2.9-11h2.3l1.8 7.3h.1l1.7-7.3h2.5l1.8 7.3h.1l1.7-7.3zM189.9 22.7h-3.8l-.7 2.1h-2.2l3.7-10.9h2.2l3.7 10.9h-2.2l-.7-2.1zm-.7-2l-1.1-3.4h-.1l-1.1 3.4h2.3zM193.3 21.8h2.2c.2.9.8 1.3 1.6 1.3 1 0 1.4-.5 1.4-1.2s-.5-1-1.3-1.3l-1.3-.4c-1.8-.5-2.4-1.7-2.4-3.1 0-2.1 1.6-3.4 3.6-3.4 2.2 0 3.4 1.3 3.6 3.3h-2.2c-.2-.8-.6-1.2-1.5-1.2-.7 0-1.3.4-1.3 1.2 0 .8.5 1.1 1.1 1.2l1.3.3c1.6.4 2.6 1.6 2.6 3.2 0 2.2-1.6 3.4-3.7 3.4-2.2 0-3.5-1.2-3.7-3.3zM214 13.9l-3.5 11h-2.2l-3.6-11h2.3l2.3 7.4h.1l2.4-7.4zM217.1 16v2.3h4.1v2h-4.1v2.5h4.3v2.1h-6.5v-11h6.5V16zM226.5 20.9h-1.1v4h-2.2v-11h4c2.1 0 3.6 1.3 3.6 3.5 0 1.7-.9 2.8-2.2 3.2l2.3 4.2h-2.5l-1.9-3.9zm-1.1-2.1h1.7c.9 0 1.5-.5 1.5-1.4 0-.9-.6-1.4-1.5-1.4h-1.7v2.8zM239.9 21.8c0 1.7-1 3-3.4 3h-4.1V13.9h4.2c2.2 0 3.2 1.3 3.2 2.9 0 1.1-.5 2-1.3 2.5v.1c.9.4 1.4 1.3 1.4 2.4zm-5.2-5.9v2.5h1.7c.7 0 1.2-.5 1.2-1.3s-.5-1.3-1.2-1.3h-1.7v.1zm2.9 5.7c0-.8-.5-1.3-1.3-1.3h-1.6v2.6h1.6c.9 0 1.3-.5 1.3-1.3zM241.6 13.9h2.2v11h-2.2zM254.4 13.9v11h-2.2l-4-6.9h-.1v6.9h-2.2v-11h2.3l3.9 6.9h.1v-6.9zM256.5 13.9h3.8c2.8 0 4.6 1.9 4.6 5.5s-1.8 5.5-4.6 5.5h-3.8v-11zm3.7 8.9c1.5 0 2.5-1 2.5-3.4s-1-3.4-2.5-3.4h-1.4v6.8h1.4zM268.8 16v2.3h4v2h-4v2.5h4.2v2.1h-6.4v-11h6.4V16zM273.9 13.9h7.8V16h-2.8v8.9h-2.2V16h-2.8zM281.5 22.3h2.5v2.6h-2.5z" })) : (index.h("path", { d: "M103.174 13.906h2.159v8.686h3.822v2.01h-5.981zM110.296 13.906h2.16v10.696h-2.16zM116.712 15.904v2.42h3.822v1.997h-3.822v4.281h-2.16V13.906h6.13v1.998zM124.033 15.904v2.258h3.97v1.998h-3.97v2.432h4.132v2.01h-6.291V13.906h6.291v1.998zM133.662 13.906h2.16v10.696h-2.16zM137.05 21.575h2.147c.186.893.781 1.253 1.563 1.253.93 0 1.39-.509 1.39-1.204 0-.67-.447-1.005-1.278-1.228l-1.229-.348c-1.712-.459-2.382-1.7-2.382-3.04 0-2.047 1.526-3.326 3.5-3.326 2.158 0 3.325 1.254 3.536 3.214h-2.11c-.149-.794-.595-1.203-1.427-1.203-.732 0-1.29.41-1.29 1.166 0 .757.496 1.03 1.092 1.179l1.228.335c1.588.41 2.581 1.588 2.581 3.115 0 2.146-1.588 3.35-3.598 3.35-2.222 0-3.525-1.154-3.723-3.263zM151.618 15.904v2.42h3.822v1.997h-3.822v4.281h-2.16V13.906h6.13v1.998zM156.594 19.254c0-3.462 1.6-5.584 4.53-5.584 2.928 0 4.528 2.122 4.528 5.584 0 3.462-1.6 5.584-4.529 5.584-2.928 0-4.53-2.134-4.53-5.584zm6.812 0c0-2.333-.806-3.524-2.283-3.524-1.489 0-2.283 1.179-2.283 3.524 0 2.345.794 3.524 2.283 3.524 1.49 0 2.283-1.191 2.283-3.524zM170.343 20.693H169.3v3.91h-2.159V13.917h3.946c2.085 0 3.55 1.229 3.55 3.388 0 1.638-.845 2.742-2.147 3.164l2.258 4.132h-2.395l-2.01-3.909zm-1.043-1.997h1.676c.843 0 1.427-.497 1.427-1.39 0-.894-.571-1.39-1.427-1.39H169.3v2.78zM179.203 21.575h2.146c.187.893.782 1.253 1.564 1.253.93 0 1.39-.509 1.39-1.204 0-.67-.447-1.005-1.278-1.228l-1.229-.348c-1.712-.459-2.382-1.7-2.382-3.04 0-2.047 1.526-3.326 3.499-3.326 2.16 0 3.326 1.254 3.537 3.214h-2.11c-.149-.794-.596-1.203-1.427-1.203-.732 0-1.29.41-1.29 1.166 0 .757.496 1.03 1.091 1.179l1.229.335c1.588.41 2.581 1.588 2.581 3.115 0 2.146-1.588 3.35-3.599 3.35-2.22 0-3.536-1.154-3.722-3.263zM196.004 13.906v10.696h-2.159V20.16h-3.822v4.442h-2.159V13.906h2.16v4.256h3.821v-4.256zM203.4 22.53h-3.685l-.683 2.06h-2.196l3.648-10.684h2.16l3.647 10.684h-2.196l-.695-2.06zm-.67-2.01l-1.117-3.313h-.1l-1.116 3.313h2.333zM210.324 20.693h-1.042v3.91h-2.16V13.917h3.947c2.084 0 3.549 1.229 3.549 3.388 0 1.638-.844 2.742-2.147 3.164l2.258 4.132h-2.395l-2.01-3.909zm-1.042-1.997h1.675c.844 0 1.427-.497 1.427-1.39 0-.894-.57-1.39-1.427-1.39h-1.675v2.78zM215.983 13.906h2.159v10.696h-2.16zM228.503 13.906v10.696h-2.171l-3.847-6.688h-.1v6.688h-2.159V13.906h2.197l3.834 6.725h.1v-6.725zM239.026 18.969v.595c0 3.537-1.589 5.274-4.294 5.274-3.102 0-4.678-2.16-4.678-5.584 0-3.425 1.663-5.584 4.629-5.584 2.308 0 3.871 1.377 4.181 3.375h-2.308c-.235-.794-.93-1.315-1.873-1.315-1.527 0-2.383 1.216-2.383 3.524s.82 3.524 2.432 3.524c1.142 0 1.899-.533 2.085-1.948h-1.948v-1.861h4.157zM240.192 22.133h2.457v2.47h-2.457z" })), index.h("g", null, index.h("path", { d: "M7.3 16.6H0v7.3h7.3z" }), index.h("path", { d: "M.4 0L0 12.7l1.9.3c.4-3.7 1.3-6.5 2.9-8.3 1.7-1.9 4-2.9 7-3v26.6c0 2.3-.3 3.8-1 4.5-.6.6-1.5 1-2.9 1.1-.3.1-1 .1-2 .1v2h17.8v-2c-1 0-1.7 0-2.1-.1-1.4-.1-2.3-.5-2.9-1.1-.7-.7-1-2.2-1-4.5V1.7c3 .1 5.3 1.1 7 3 1.6 1.8 2.6 4.6 2.9 8.3l1.9-.3L29.2 0H.4z" }), index.h("path", { d: "M22.2 16.6v7.3h7.3v-7.3h-3.7zM44.1 16.6v7.3h7.3v-7.3h-3.6zM66 16.6v7.3h7.3v-7.3h-3.8z" }))))));
  }
};
Logo.style = appLogoCss;

const appMegaMenuCss = "app-mega-menu{--box-shadow:var(--scl-shadow-level-4);--spacing-y:34px;--spacing-right:var(--scl-spacing-16);--spacing-left:var(--scl-spacing-24);--background:var(--scl-color-white);--color-active:var(--scl-color-primary);--font-size-row-title:var(--scl-font-size-16);--spacing-bottom-row-title:18px;--font-weight-row-title:var(--scl-font-weight-extrabold);--color-row-title:var(--scl-color-text-standard);--font-size-row-item:var(--scl-font-size-16);--line-height-row-item:var(--scl-font-line-height-150);--font-weight-row-item:var(--scl-font-weight-medium);--color-row-item:var(--scl-color-text-standard);--spacing-bottom-row-item:var(--scl-spacing-8)}.mega-menu{width:100%;position:absolute;top:calc(var(--header-brand-height) * -1);left:0;border-radius:0 0 var(--header-border-radius) var(--header-border-radius);padding-top:calc(var(--header-nav-height) + var(--header-brand-height));display:none;pointer-events:none;transition:none;box-shadow:var(--box-shadow)}.mega-menu__wrapper{padding:var(--spacing-y) var(--spacing-right) var(--spacing-y)\n    var(--spacing-left);background:var(--background);pointer-events:none;border-bottom-left-radius:var(--header-border-radius);border-bottom-right-radius:var(--header-border-radius)}.mega-menu__container{max-width:1168px;margin:0 auto;display:grid;grid-template-columns:repeat(5, minmax(min-content, 240px));list-style:none;padding-left:var(--scl-spacing-32)}.mega-menu__row-title{cursor:default;font-size:var(--font-size-row-title);margin-bottom:var(--spacing-bottom-row-title);font-weight:var(--font-weight-row-title);color:var(--color-row-title)}.mega-menu__row-item{font-size:var(--font-size-row-item);line-height:var(--line-height-row-item);font-weight:var(--font-weight-row-item);color:var(--color-row-item);margin-bottom:var(--spacing-bottom-row-item);text-decoration:none;transition:color, border 0.15s ease-in-out;display:block}.mega-menu__row-item.active,.mega-menu__row-item:hover{color:var(--color-active);margin-bottom:7px}.mega-menu__row-item.active span,.mega-menu__row-item:hover span{padding-bottom:2px;margin-bottom:-2px;display:inline-block;border-bottom:1px solid var(--color-active)}.mega-menu__row li{list-style:none}.mega-menu__row ul{padding-inline-start:0}";

const MegaMenu = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.navigation = [];
  }
  componentWillLoad() {
    this.hasCustomBody = !!this.hostElement.querySelector('[slot="custom-body"]');
  }
  render() {
    return (index.h("div", { class: "mega-menu" }, index.h("div", { class: "mega-menu__wrapper" }, this.hasCustomBody ? (index.h("slot", { name: "custom-body" })) : (index.h("ul", { class: "mega-menu__container" }, this.navigation.map((child) => (index.h("li", { class: "mega-menu__row" }, index.h("div", { class: "mega-menu__row-title" }, child.name), index.h("ul", null, child.children &&
      child.children.length > 0 &&
      child.children.map((menuItem) => (index.h("li", null, index.h("a", { class: `mega-menu__row-item ${this.activeRouteId === menuItem.id ? 'active' : ''}`, "aria-current": this.activeRouteId === menuItem.id
          ? 'true'
          : 'false', href: menuItem.href || 'javascript:void(0);', tabIndex: this.isActive ? 0 : -1, onClick: (event) => {
          this.hide();
          if (typeof menuItem.onClick === 'function') {
            menuItem.onClick(event);
          }
        }, onKeyDown: (event) => {
          if (['Escape', 'Esc'].includes(event.key)) {
            this.hide();
          }
        } }, index.h("span", null, menuItem.name), this.activeRouteId === menuItem.id && (index.h("span", { class: "sr-only" }, "active")))))))))))))));
  }
  get hostElement() { return index.getElement(this); }
};
MegaMenu.style = appMegaMenuCss;

const appNavigationMainMobileCss = "app-navigation-main-mobile{--min-height:calc(100vh - 56px - 56px);--font-size:var(--scl-font-size-24);--font-weight:var(--scl-font-weight-extrabold);--line-height:3.333;--border-bottom:1px solid #efefef;--color:var(--scl-color-text-standard);--color-selected:var(--scl-color-primary);--font-size-child:var(--scl-font-size-24);--line-height-child:2.5;--font-weight-child:var(--scl-font-weight-regular);--transition:all var(--scl-motion-duration-fast)\n    var(--scl-motion-easing-standard);width:100%}.main-navigation-mobile{width:100%;position:relative}.main-navigation-mobile__main-menu{width:100%;list-style:none;padding:0;margin:0;min-height:var(--min-height)}.main-navigation-mobile__item{font-size:var(--font-size);font-weight:var(--font-weight);line-height:var(--line-height)}.main-navigation-mobile__item-wrapper{box-sizing:border-box;width:calc(100% - 34px);display:flex;justify-content:space-between;margin-left:34px;border-bottom:var(--border-bottom);padding-right:34px;align-items:center}.main-navigation-mobile__item-link{text-decoration:none;color:var(--color);transition:var(--transition)}.main-navigation-mobile__item-link--selected{color:var(--color-selected);transition:var(--transition)}.main-navigation-mobile__item-link--selected .main-navigation-mobile__item{border-right:2px solid var(--color-selected)}.main-navigation-mobile__item-link--selected svg{margin-right:-2px}.main-navigation-mobile__child-menu{position:absolute;top:0;left:0;background:var(--scl-color-white);width:100%;min-height:var(--min-height)}.main-navigation-mobile__child-menu-current-item{line-height:var(--line-height)}.main-navigation-mobile__child-menu-current-item svg{margin-right:6px;margin-top:-4px}.main-navigation-mobile__child-menu-current{font-size:var(--scl-font-size-24);font-weight:var(--scl-font-weight-extrabold);color:var(--color-selected);text-decoration:none}.main-navigation-mobile__child-menu-current-wrapper{width:calc(100% - 34px);display:flex;align-items:center;border-bottom:var(--border-bottom);margin-left:34px}.main-navigation-mobile__child-menu-current app-icon{margin-right:var(--scl-spacing-8)}.main-navigation-mobile__child-menu-current .icon-back{fill:var(--color-selected)}.main-navigation-mobile__child-menu-items{list-style:none;margin:0;padding:0}.main-navigation-mobile__child-menu-item-link{text-decoration:none;color:var(--color)}.main-navigation-mobile__child-menu-item-link.selected{color:var(--color-selected)}.main-navigation-mobile__child-menu-item-link.selected .main-navigation-mobile__child-menu-item-wrapper{border-right:2px solid var(--color-selected)}.main-navigation-mobile__child-menu-item-link.selected svg{margin-right:38px}.main-navigation-mobile__child-menu-item{font-size:var(--font-size-child);line-height:var(--line-height-child);font-weight:var(--font-weight-child)}.main-navigation-mobile__child-menu-item-wrapper{width:calc(100% - 64px);display:flex;justify-content:space-between;align-items:center;border-bottom:var(--border-bottom);margin-left:var(--scl-spacing-64);box-sizing:border-box}.main-navigation-mobile__child-menu-item-wrapper svg{margin-right:var(--scl-spacing-40)}";

const MainNavigationMobile = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.closeMenu = index.createEvent(this, "closeMenu", 7);
    this.selected = undefined;
    this.parent = undefined;
  }
  handleActiveRoute(newValue) {
    this.selected = menuUtils.findSelected(this.navigation, newValue, null).selected;
    this.parent = menuUtils.findSelected(this.navigation, newValue).parent;
  }
  componentWillLoad() {
    this.selected = menuUtils.findSelected(this.navigation, this.activeRouteId, null).selected;
    this.parent = menuUtils.findSelected(this.navigation, this.activeRouteId).parent;
  }
  closeMenuHandler() {
    this.closeMenu.emit();
  }
  handlePrevSelected(event, item) {
    event.preventDefault();
    const selected = menuUtils.findSelected(this.navigation, item.id).parent;
    this.selected = selected;
    this.parent = selected;
  }
  handleSelect(event, item) {
    const { selected, parent } = menuUtils.findSelected(this.navigation, item.id);
    this.selected = selected;
    this.parent = parent;
    if (typeof item.onClick === 'function') {
      item.onClick(event);
    }
    if (!selected.children) {
      this.closeMenuHandler();
    }
  }
  childMenuPage() {
    const section = this.selected && this.selected.children ? this.selected : this.parent;
    const { selected, parent } = menuUtils.findSelected(this.navigation, this.activeRouteId);
    if (!section) {
      return index.h("div", null);
    }
    const isActive = (child) => (selected && child.id === selected.id) ||
      (parent && parent.id === child.id);
    return (index.h("div", { class: "main-navigation-mobile__child-menu" }, index.h("a", { class: "main-navigation-mobile__child-menu-current", href: section.href || 'javascript:void(0);', onClick: (event) => {
        this.handlePrevSelected(event, section);
      }, tabIndex: 0, onKeyDown: (event) => {
        if (['Enter', ' '].includes(event.key)) {
          event.preventDefault();
          this.handlePrevSelected(event, section);
          if (!this.selected) {
            // focus first main navigation item to ease tab navigation
            this.mainNavigationWrapper.querySelector('a').focus();
          }
        }
        if (['Escape', 'Esc'].includes(event.key)) {
          this.hide();
        }
      } }, index.h("div", { class: "main-navigation-mobile__child-menu-current-item" }, index.h("div", { class: "main-navigation-mobile__child-menu-current-wrapper" }, index.h("scale-icon-navigation-left", null), index.h("div", null, section.name)))), index.h("ul", { class: "main-navigation-mobile__child-menu-items", ref: (el) => {
        this.childrenWrapper = el;
      } }, section.children.map((child) => (index.h("a", { "aria-current": isActive(child) ? 'true' : 'false', "aria-haspopup": child.children ? 'true' : 'false', class: `main-navigation-mobile__child-menu-item-link ${isActive(child) ? 'selected' : ''}`, href: child.href || 'javascript:void(0);', tabIndex: 0, onClick: (event) => {
        this.handleSelect(event, child);
      }, onKeyDown: (event) => {
        if (['Enter', ' '].includes(event.key)) {
          this.handleSelect(event, child);
          setTimeout(() => {
            // focus first child menu item link to ease tab navigation
            const firstChildren = this.childrenWrapper.querySelector('a');
            if (firstChildren) {
              this.childrenWrapper.querySelector('a').focus();
            }
          });
        }
        if (['Escape', 'Esc'].includes(event.key)) {
          this.hide();
        }
      } }, index.h("li", { class: "main-navigation-mobile__child-menu-item" }, index.h("div", { class: "main-navigation-mobile__child-menu-item-wrapper" }, index.h("span", null, child.name), isActive(child) && index.h("span", { class: "sr-only" }, "active"), child.children && (index.h("scale-icon-navigation-right", null))))))))));
  }
  render() {
    const { selected } = menuUtils.findSelected(this.navigation, this.activeRouteId);
    const rootNode = selected && menuUtils.findRootNode(this.navigation, selected.id);
    const isActive = (itemId) => rootNode && rootNode.id === itemId;
    return (index.h("div", { class: "main-navigation-mobile" }, this.childMenuPage(), index.h("ul", { class: "main-navigation-mobile__main-menu", ref: (el) => {
        this.mainNavigationWrapper = el;
      } }, (this.navigation || []).map((item) => (index.h("a", { "aria-current": isActive(item.id) ? 'true' : 'false', "aria-haspopup": item.children ? 'true' : 'false', class: `main-navigation-mobile__item-link${isActive(item.id)
        ? ' main-navigation-mobile__item-link--selected'
        : ''}`, href: item.href || 'javascript:void(0);', onClick: (event) => {
        this.handleSelect(event, item);
      }, onKeyDown: (event) => {
        if (['Enter', ' '].includes(event.key)) {
          this.handleSelect(event, item);
          setTimeout(() => {
            // focus first child menu item link to ease tab navigation
            const firstChildren = this.childrenWrapper.querySelector('a');
            if (firstChildren) {
              this.childrenWrapper.querySelector('a').focus();
            }
          });
        }
        if (['Escape', 'Esc'].includes(event.key)) {
          this.hide();
        }
      },
      // hide from tab navigation when on childMenuPage
      tabIndex: this.selected ? -1 : 0 }, index.h("li", { class: "main-navigation-mobile__item" }, index.h("div", { class: "main-navigation-mobile__item-wrapper" }, index.h("span", null, item.name), isActive(item.id) && index.h("span", { class: "sr-only" }, "active"), item.children && (index.h("scale-icon-navigation-right", null))))))))));
  }
  static get watchers() { return {
    "activeRouteId": ["handleActiveRoute"]
  }; }
};
MainNavigationMobile.style = appNavigationMainMobileCss;

const appNavigationSectorMobileCss = "app-navigation-sector-mobile{--border-bottom:1px solid #efefef;--color:var(--scl-color-text-standard);--font-weight:var(--scl-font-weight-bold);--font-size:var(--scl-font-size-16);--transition:all var(--scl-motion-duration-fast)\n    var(--scl-motion-easing-standard);--border-bottom-selected:1px solid var(--scl-color-primary);--color-selected:var(--scl-color-primary);width:100%}.sector-navigation-mobile{display:flex;width:100%;list-style:none;padding:0;margin:0;border-bottom:var(--border-bottom)}.sector-navigation-mobile__item{width:100%}.sector-navigation-mobile__item-link{color:var(--color);text-decoration:none;font-weight:var(--font-weight);font-size:var(--font-size);width:100%;height:54px;display:flex;align-items:center;justify-content:center;transition:var(--transition)}.sector-navigation-mobile__item-link--selected{border-bottom:var(--border-bottom-selected);color:var(--color-selected);transition:var(--transition)}";

const NavigationSectorMobile = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    // @ts-ignore
    this.selected = this.navigation
      ? // @ts-ignore
        this.navigation.find(({ id }) => id === this.activeSectorId) ||
          // @ts-ignore
          this.navigation[0]
      : {};
  }
  handleActiveSegment(newValue) {
    this.selected =
      this.navigation.find(({ id }) => id === newValue) || this.navigation[0];
  }
  handleSelected(event, item) {
    this.selected = item;
    if (typeof item.onClick === 'function') {
      item.onClick(event);
    }
  }
  render() {
    return (index.h("ul", { class: "sector-navigation-mobile" }, (this.navigation || []).map((item) => (index.h("li", { class: "sector-navigation-mobile__item" }, index.h("a", { class: `sector-navigation-mobile__item-link${this.selected.id === item.id
        ? ' sector-navigation-mobile__item-link--selected'
        : ''}`, href: item.href || 'javascript:void(0);', onClick: (event) => this.handleSelected(event, item), onKeyDown: (event) => {
        if (['Escape', 'Esc'].includes(event.key)) {
          this.hide();
        }
      }, "aria-current": this.selected.id === item.id ? 'true' : 'false' }, item.name, this.selected.id === item.id && (index.h("span", { class: "sr-only" }, "active"))))))));
  }
  static get watchers() { return {
    "activeSectorId": ["handleActiveSegment"]
  }; }
};
NavigationSectorMobile.style = appNavigationSectorMobileCss;

const NavigationLeft = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /** (optional) The width and height in pixels */
    this.size = 24;
    /** (optional) Sets the icon color via the `fill` attribute */
    this.color = 'currentColor';
    /** (optional) If `true`, the icon changes visually */
    this.selected = false;
    /** (optional) If `true` the SVG element will get `aria-hidden="true"` */
    this.decorative = false;
  }
  connectedCallback() {
    if (!this.hostElement.hasAttribute('styles')) {
      this.hostElement.style.display = 'inline-flex';
    }
  }
  render() {
    const ariaHidden = this.decorative ? { 'aria-hidden': 'true' } : {};
    return (index.h(index.Host, null, index.h("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", width: this.size, height: this.size, viewBox: "0 0 24 24" }, ariaHidden), this.accessibilityTitle && index.h("title", null, this.accessibilityTitle), index.h("g", { fill: this.color }, this.selected ? (index.h("g", null, index.h("path", { "fill-rule": "evenodd", d: "M16 20.75a1.26 1.26 0 01-.775-.25L4.5 12l10.725-8.5a1.265 1.265 0 111.55 2L8.5 12l8.275 6.5A1.25 1.25 0 0116 20.75z" }))) : (index.h("g", null, index.h("path", { d: "M15.55 20.1L5.3 12l10.25-8.1c.35-.25.8-.2 1.05.1.25.35.2.8-.1 1.05L7.7 12l8.75 6.9c.35.25.4.75.1 1.05-.2.35-.7.4-1 .15z", "fill-rule": "evenodd" })))))));
  }
  get hostElement() { return index.getElement(this); }
};

const navIconCss = "scale-nav-icon{--spacing-mobile:0 6px;--font-size-mobile:var(--scl-font-size-10);--line-height-mobile:var(--scl-font-line-height-120);--font-weight-mobile:var(--scl-font-weight-bold);--spacing-desktop:0 0 0 var(--scl-spacing-16);--font-size-desktop:var(--scl-font-size-12);--line-height-desktop:var(--scl-font-line-height-133);--color:var(--scl-color-primary);--color-hover:var(--scl-color-primary-hover);--color-active:var(--scl-color-primary-active)}@media (max-width: 1023px){.meta-navigation__item-link{min-width:24px}.meta-navigation__item-link{margin:var(--spacing-mobile);font-size:var(--font-size-mobile);line-height:var(--line-height-mobile);flex-direction:column}.meta-navigation__item.mobile-menu{width:50px;text-align:center;cursor:pointer}.meta-navigation .meta-navigation__item.mobile-menu.open .meta-navigation__item-link-icon,.header .meta-navigation .meta-navigation__item.mobile-menu.open .meta-navigation__item-label{color:var(--color)}.meta-navigation__item-link .meta-navigation__item-link-icon{width:18px;height:18px;margin-bottom:4px}}.meta-navigation__item-link{color:var(--scl-color-text-standard);display:flex;transition:all 0.2s ease-in-out;align-items:center;font-weight:var(--font-weight-mobile);text-decoration:none}@media (min-width: 1024px){.meta-navigation__item-link:hover{color:var(--color-hover)}.meta-navigation__item-link:active{color:var(--color-active)}.meta-navigation__item-link{margin:var(--spacing-desktop);font-size:var(--font-size-desktop);line-height:var(--line-height-desktop)}.meta-navigation__item-link .meta-navigation__item-link-icon{margin-right:6px}}";

const NavIcon = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /** (optional) if this item is active */
    this.isActive = false;
    /** (optional) href value */
    this.href = 'javascript:void(0);';
    this.isMobileMenuOpen = false;
  }
  render() {
    return (index.h("li", { class: this.getCssClassMap() }, index.h("a", { class: "meta-navigation__item-link", ref: this.refMobileMenuToggle, href: this.href, onClick: this.clickLink, onKeyDown: (event) => {
        if (!this.refMobileMenuToggle) {
          return;
        }
        if (['Enter', ' ', 'Escape', 'Esc'].includes(event.key)) {
          event.preventDefault();
          this.clickLink(event);
        }
      } }, renderIcon.renderIcon({
      tag: `scale-icon-${this.icon}`,
      attributes: { class: 'meta-navigation__item-link-icon' },
    }), index.h("span", { class: "meta-navigation__item-label" }, index.h("slot", null)))));
  }
  getCssClassMap() {
    return index$1.classnames('meta-navigation__item', !!this.refMobileMenuToggle && 'mobile-menu', this.isMobileMenuOpen && 'open');
  }
};
NavIcon.style = navIconCss;

const navMainCss = "scale-nav-main{--spacing-x:var(--scl-font-size-16);--color:var(--scl-color-text-standard);--color-hover:var(--scl-color-primary-hover);--color-active:var(--scl-color-primary-hover);--color-selected:var(--scl-color-primary);--font-size:var(--scl-font-variant-body-large-size);--font-weight:var(--scl-font-weight-extrabold);--line-height:var(--scl-font-line-height-120)}.main-navigation__item{height:100%;padding-left:var(--spacing-x);padding-right:var(--spacing-x)}.main-navigation__item:has(a[href]){cursor:pointer}.main-navigation__item-link-text{white-space:nowrap}.main-navigation__item.mega-menu--visible .mega-menu{display:block}.main-navigation__item.mega-menu--visible .mega-menu__wrapper{pointer-events:visible}.main-navigation__item .main-navigation__item-link{display:flex;height:100%;color:var(--color);font-size:var(--font-size);font-weight:var(--font-weight);line-height:var(--line-height);transition:color, border 0.2s ease-in-out;align-items:center;text-decoration:none}.main-navigation__item:hover .main-navigation__item-link{color:var(--color-hover)}.main-navigation__item:hover .main-navigation__item-link-text{border-bottom:2px solid var(--color-hover);margin-bottom:-2px;height:calc(100% - 4px);display:flex;align-items:center}.main-navigation__item:active .main-navigation__item-link{color:var(--color-active)}.main-navigation__item:active .main-navigation__item-link-text{border-bottom:2px solid var(--color-active);margin-bottom:-2px;height:calc(100% - 4px);display:flex;align-items:center}.main-navigation__item.selected .main-navigation__item-link{color:var(--color-selected)}.main-navigation__item.mega-menu--visible .main-navigation__item-link{color:var(--color-selected)}.main-navigation__item.selected .main-navigation__item-link-text{border-bottom:2px solid var(--color-selected);margin-bottom:-2px;height:calc(100% - 4px);display:flex;align-items:center}.main-navigation__item.mega-menu--visible .main-navigation__item-link-text{border-bottom:2px solid var(--color-selected);margin-bottom:-2px;height:calc(100% - 4px);display:flex;align-items:center}.sr-only{position:absolute;left:-10000px;overflow:hidden}";

const NavMain = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /** (optional) if this item is active */
    this.isActive = false;
    /** (optional) if this mega-menu is visible */
    this.isMegaMenuVisible = false;
    /** (optional) href value */
    this.href = 'javascript:void(0);';
  }
  componentWillLoad() {
    this.hasSlotMegaMenu = !!this.hostElement.querySelector('app-mega-menu');
  }
  render() {
    return (index.h(index.Host, null, index.h("li", { class: this.getCssClassMap() }, index.h("a", { class: "main-navigation__item-link", href: this.href, "aria-current": this.isActive ? 'true' : 'false', "aria-haspopup": this.hasSlotMegaMenu ? 'true' : 'false', tabIndex: 0, onClick: this.clickLink }, index.h("span", { class: "main-navigation__item-link-text" }, this.name), this.isActive && index.h("span", { class: "sr-only" }, "active")), index.h("slot", null))));
  }
  getCssClassMap() {
    return index$1.classnames('main-navigation__item', this.isMegaMenuVisible && 'mega-menu--visible', this.isActive && 'selected');
  }
  get hostElement() { return index.getElement(this); }
};
NavMain.style = navMainCss;

const navSegmentCss = "scale-nav-segment{--transition:all 0.2s ease-in-out;--color:var(--scl-color-white);--spacing-y:var(--scl-spacing-4);--font-size:var(--scl-font-size-14);--font-weight:var(--scl-font-weight-extrabold);--line-height:var(--scl-font-line-height-114);--border-bottom:1px solid var(--scl-color-white)}.sr-only{position:absolute;left:-10000px;overflow:hidden}.segment-navigation__item{list-style:none}.segment-navigation__item-link{color:var(--color);padding:var(--spacing-y) 0;font-size:var(--font-size);font-weight:var(--font-weight);line-height:var(--line-height);transition:var(--transition);text-decoration:none}.segment-navigation__item-link:hover,.segment-navigation__item-link.active{border-bottom:var(--border-bottom);transition:var(--transition)}";

const NavSegment = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /** (optional) if this item is active */
    this.isActive = false;
    /** (optional) href value */
    this.href = 'javascript:void(0);';
  }
  render() {
    return (index.h("li", { class: this.getCssClassMap() }, index.h("a", { class: index$1.classnames('segment-navigation__item-link', this.isActive && 'active'), href: this.href, onFocus: () => {
        window.scrollTo({ top: 0 });
      }, "aria-current": this.isActive ? 'true' : 'false' }, index.h("slot", null), this.isActive && index.h("span", { class: "sr-only" }, "active"))));
  }
  getCssClassMap() {
    return index$1.classnames('segment-navigation__item');
  }
};
NavSegment.style = navSegmentCss;

exports.app_logo = Logo;
exports.app_mega_menu = MegaMenu;
exports.app_navigation_main_mobile = MainNavigationMobile;
exports.app_navigation_sector_mobile = NavigationSectorMobile;
exports.scale_icon_navigation_left = NavigationLeft;
exports.scale_nav_icon = NavIcon;
exports.scale_nav_main = NavMain;
exports.scale_nav_segment = NavSegment;
