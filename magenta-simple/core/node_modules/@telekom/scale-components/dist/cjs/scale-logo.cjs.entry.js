'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-66a8d2d7.js');
const index$1 = require('./index-550fcacd.js');
const statusNote = require('./status-note-b89242d6.js');

const logoCss = ":host{--logo-size:36px}.logo{display:inline-flex;height:var(--logo-size);padding:calc(var(--logo-size) / 3);position:relative}.logo--variant-magenta{background-color:var(--scl-color-white)}.logo--variant-white{background-color:var(--scl-color-primary)}.logo--transparent{background-color:transparent}";

const Logo = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /** (optional) Variant/color of the logo text and logo */
    this.variant = 'magenta';
    /** (optional) Set transparent background */
    this.transparent = false;
    /** (optional) Language of the logo text/ claimOff showes just the T Logo */
    this.language = 'en';
    /** (optional) The height in pixels */
    this.size = 36;
    /** (optional) When using the icon standalone, make it meaningful for accessibility */
    this.accessibilityTitle = 'Telekom Logo';
  }
  connectedCallback() {
    statusNote.statusNote({ source: this.hostElement, tag: 'beta' });
  }
  styles() {
    return `:host {
      --logo-size: ${this.size}px;
    }`;
  }
  getLogoSvg() {
    return (index.h("scale-logo-svg", { language: this.language, color: this.variant, size: this.size, accessibilityTitle: this.accessibilityTitle }));
  }
  render() {
    return (index.h(index.Host, null, index.h("style", null, this.styles()), this.href === '' ? (index.h("div", { role: "img", "aria-label": "Telekom Logo", class: this.getCssClassMap(), onClick: this.clickHandler, tabIndex: 0 }, this.getLogoSvg())) : (index.h("a", { role: "link", "aria-label": "Telekom Logo", href: this.href, class: this.getCssClassMap(), onClick: this.clickHandler, tabIndex: 0 }, this.getLogoSvg()))));
  }
  getCssClassMap() {
    return index$1.classnames(`logo`, this.variant && `logo--variant-${this.variant}`, this.transparent && `logo--transparent`);
  }
  get hostElement() { return index.getElement(this); }
};
Logo.style = logoCss;

exports.scale_logo = Logo;
