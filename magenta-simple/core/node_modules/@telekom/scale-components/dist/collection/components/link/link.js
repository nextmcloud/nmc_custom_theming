/**
 * @license
 * Scale https://github.com/telekom/scale
 *
 * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import { Component, h, Prop, Host } from '@stencil/core';
import classNames from 'classnames';
export class Link {
  constructor() {
    /** (optional) Disabled link */
    this.disabled = false;
    /** (optional) Block link */
    this.block = false;
    /** (optional) Link underline */
    // @Prop() underline?: boolean = true;
    /** (optional) Link open a new tag */
    this.target = '_self';
    /** (optional) Link variant */
    this.variant = '';
  }
  render() {
    return (h(Host, null,
      this.styles && h("style", null, this.styles),
      h("a", Object.assign({ class: this.getCssClassMap(), part: classNames('base', this.disabled && 'disabled'), href: this.disabled ? 'javascript:void(0)' : this.href }, (!this.disabled ? { target: this.target } : {}), { "aria-disabled": this.disabled }),
        h("span", { class: "link__wrapper", part: "wrapper" },
          h("slot", null),
          h("slot", { name: "icon" })))));
  }
  getCssClassMap() {
    return classNames('link', this.disabled && 'link--disabled', this.block && 'link--block');
  }
  static get is() { return "scale-link"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["./link.css"]
  }; }
  static get styleUrls() { return {
    "$": ["link.css"]
  }; }
  static get properties() { return {
    "href": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "(optional) Link href"
      },
      "attribute": "href",
      "reflect": false
    },
    "disabled": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "(optional) Disabled link"
      },
      "attribute": "disabled",
      "reflect": false,
      "defaultValue": "false"
    },
    "block": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "(optional) Block link"
      },
      "attribute": "block",
      "reflect": false,
      "defaultValue": "false"
    },
    "target": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "(optional) Link open a new tag"
      },
      "attribute": "target",
      "reflect": false,
      "defaultValue": "'_self'"
    },
    "variant": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "(optional) Link variant"
      },
      "attribute": "variant",
      "reflect": false,
      "defaultValue": "''"
    },
    "styles": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "(optional) Injected CSS styles"
      },
      "attribute": "styles",
      "reflect": false
    }
  }; }
}
